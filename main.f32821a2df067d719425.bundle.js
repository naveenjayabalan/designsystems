(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[function(module,exports){module.exports=storybook_docs_dll},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("ERkP")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("1t7P")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("IAdD")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("ho0z")},,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("+KXO")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("jQ/y")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("7x/C")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("vrRf")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("plBw")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("2G9S")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("M+/F")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("z84I")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("cARO")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("87if")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("DZ+c")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("lTEL")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("kYxP")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("aLgo")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("NyMY")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("KqXw")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("UvmB")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("hCOa")},,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("aokA")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("lN5B")},,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("jwue")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("+oxZ")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("LW0h")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("EgRP")},,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("yH/f")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("7xRU")},,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("Ysgh")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("aYSr")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("A3UQ")},,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("MvUL")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("Yct5")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("1IsZ")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("jQ3i")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("ZVkB")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("KOtZ")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("1Iuc")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("WNMA")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("x4t0")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("vbDw")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("hBpG")},,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("JtPf")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("P2aG")},,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("ax0f")},,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("tVqn")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("sVFb")},,,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("3yYM")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("5BYb")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("5o43")},,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("5878")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("LJOr")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("pu3o")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("6U7i")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("Cm4o")},,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("iKE+")},,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("CUMQ")},,,,,,,,,function(module,exports){module.exports="<button>Hello world</button>"},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("+kY7")},,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("DfhM")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("LqLs")},,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("ct80")},,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("l1C2")},,,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("j4Sf")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("LUwd")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("OZaJ")},,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("lZm3")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("Ee2X")},,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("F63i")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("S3pA")},,,,,,,,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("N4z3")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("GFpt")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("1Mu/")},,,,,function(module){module.exports=JSON.parse('{"numFailedTestSuites":1,"numFailedTests":4,"numPassedTestSuites":0,"numPassedTests":3,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":1,"numTotalTests":7,"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeys":[],"unmatched":0,"updated":0},"startTime":1525471117521,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"true should be true","location":null,"status":"passed","title":"true should be true"},{"ancestorTitles":["In a describe: "],"failureMessages":[],"fullName":"In a describe:  true should still be true","location":null,"status":"passed","title":"true should still be true"},{"ancestorTitles":["In a describe: "],"failureMessages":[],"fullName":"In a describe:  a list should contain 3 items","location":null,"status":"passed","title":"a list should contain 3 items"},{"ancestorTitles":["In a describe: "],"failureMessages":["Error: \\u001b[2mexpect(\\u001b[22m\\u001b[31mreceived\\u001b[39m\\u001b[2m).toEqual(\\u001b[22m\\u001b[32mexpected\\u001b[39m\\u001b[2m)\\u001b[22m\\n\\nExpected value to equal:\\n  \\u001b[32m\\"everything is awesome\\"\\u001b[39m\\nReceived:\\n  \\u001b[31m\\"everything is all right\\"\\u001b[39m\\n    at Object.<anonymous> (/Users/jetbrains/IdeaProjects/storybook/examples/official-storybook/tests/addon-jest.test.js:16:39)\\n    at Object.asyncFn (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/jasmine_async.js:82:37)\\n    at resolve (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/queue_runner.js:52:12)\\n    at new Promise (<anonymous>)\\n    at mapper (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/queue_runner.js:39:19)\\n    at promise.then (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/queue_runner.js:73:82)\\n    at <anonymous>\\n    at process._tickCallback (internal/process/next_tick.js:188:7)"],"fullName":"In a describe:  everything is awesome","location":null,"status":"failed","title":"everything is awesome"},{"ancestorTitles":["A bunch of failing tests: "],"failureMessages":["Error: \\u001b[2mexpect(\\u001b[22m\\u001b[31mreceived\\u001b[39m\\u001b[2m).toBe(\\u001b[22m\\u001b[32mexpected\\u001b[39m\\u001b[2m) // Object.is equality\\u001b[22m\\n\\nExpected value to be:\\n  \\u001b[32mfalse\\u001b[39m\\nReceived:\\n  \\u001b[31mtrue\\u001b[39m\\n    at Object.<anonymous> (/Users/jetbrains/IdeaProjects/storybook/examples/official-storybook/tests/addon-jest.test.js:22:18)\\n    at Object.asyncFn (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/jasmine_async.js:82:37)\\n    at resolve (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/queue_runner.js:52:12)\\n    at new Promise (<anonymous>)\\n    at mapper (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/queue_runner.js:39:19)\\n    at promise.then (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/queue_runner.js:73:82)\\n    at <anonymous>\\n    at process._tickCallback (internal/process/next_tick.js:188:7)"],"fullName":"A bunch of failing tests:  true should still be true","location":null,"status":"failed","title":"true should still be true"},{"ancestorTitles":["A bunch of failing tests: "],"failureMessages":["Error: \\u001b[2mexpect(\\u001b[22m\\u001b[31marray\\u001b[39m\\u001b[2m).toContain(\\u001b[22m\\u001b[32mvalue\\u001b[39m\\u001b[2m)\\u001b[22m\\n\\nExpected array:\\n  \\u001b[31m[\\"a\\", \\"b\\", \\"3\\"]\\u001b[39m\\nTo contain value:\\n  \\u001b[32m301\\u001b[39m\\n    at Object.<anonymous> (/Users/jetbrains/IdeaProjects/storybook/examples/official-storybook/tests/addon-jest.test.js:26:29)\\n    at Object.asyncFn (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/jasmine_async.js:82:37)\\n    at resolve (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/queue_runner.js:52:12)\\n    at new Promise (<anonymous>)\\n    at mapper (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/queue_runner.js:39:19)\\n    at promise.then (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/queue_runner.js:73:82)\\n    at <anonymous>\\n    at process._tickCallback (internal/process/next_tick.js:188:7)"],"fullName":"A bunch of failing tests:  a list should contain 3 items","location":null,"status":"failed","title":"a list should contain 3 items"},{"ancestorTitles":["A bunch of failing tests: "],"failureMessages":["Error: \\u001b[2mexpect(\\u001b[22m\\u001b[31mfunction\\u001b[39m\\u001b[2m).toThrow(\\u001b[22m\\u001b[32mundefined\\u001b[39m\\u001b[2m)\\u001b[22m\\n\\nExpected the function to throw an error.\\nBut it didn\'t throw anything.\\n    at Object.<anonymous> (/Users/jetbrains/IdeaProjects/storybook/examples/official-storybook/tests/addon-jest.test.js:30:28)\\n    at Object.asyncFn (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/jasmine_async.js:82:37)\\n    at resolve (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/queue_runner.js:52:12)\\n    at new Promise (<anonymous>)\\n    at mapper (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/queue_runner.js:39:19)\\n    at promise.then (/Users/jetbrains/IdeaProjects/storybook/node_modules/jest-jasmine2/build/queue_runner.js:73:82)\\n    at <anonymous>\\n    at process._tickCallback (internal/process/next_tick.js:188:7)"],"fullName":"A bunch of failing tests:  should work","location":null,"status":"failed","title":"should work"}],"endTime":1525471122009,"message":"\\u001b[1m\\u001b[31m  \\u001b[1m● \\u001b[1mIn a describe:  › everything is awesome\\u001b[39m\\u001b[22m\\n\\n    \\u001b[2mexpect(\\u001b[22m\\u001b[31mreceived\\u001b[39m\\u001b[2m).toEqual(\\u001b[22m\\u001b[32mexpected\\u001b[39m\\u001b[2m)\\u001b[22m\\n    \\n    Expected value to equal:\\n      \\u001b[32m\\"everything is awesome\\"\\u001b[39m\\n    Received:\\n      \\u001b[31m\\"everything is all right\\"\\u001b[39m\\n\\u001b[2m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 14 | \\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 15 | \\u001b[39m  test(\\u001b[32m\'everything is awesome\'\\u001b[39m\\u001b[33m,\\u001b[39m () \\u001b[33m=>\\u001b[39m {\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m\\u001b[31m\\u001b[1m>\\u001b[2m\\u001b[39m\\u001b[90m 16 | \\u001b[39m    expect(\\u001b[32m\'everything is all right\'\\u001b[39m)\\u001b[33m.\\u001b[39mtoEqual(\\u001b[32m\'everything is awesome\'\\u001b[39m)\\u001b[33m;\\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 17 | \\u001b[39m  })\\u001b[33m;\\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 18 | \\u001b[39m})\\u001b[33m;\\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 19 | \\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m      \\u001b[22m\\n\\u001b[2m      \\u001b[2mat Object.<anonymous> (\\u001b[2m\\u001b[0m\\u001b[36mexamples/official-storybook/tests/addon-jest.test.js\\u001b[39m\\u001b[0m\\u001b[2m:16:39)\\u001b[2m\\u001b[22m\\n\\n\\u001b[1m\\u001b[31m  \\u001b[1m● \\u001b[1mA bunch of failing tests:  › true should still be true\\u001b[39m\\u001b[22m\\n\\n    \\u001b[2mexpect(\\u001b[22m\\u001b[31mreceived\\u001b[39m\\u001b[2m).toBe(\\u001b[22m\\u001b[32mexpected\\u001b[39m\\u001b[2m) // Object.is equality\\u001b[22m\\n    \\n    Expected value to be:\\n      \\u001b[32mfalse\\u001b[39m\\n    Received:\\n      \\u001b[31mtrue\\u001b[39m\\n\\u001b[2m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 20 | \\u001b[39mdescribe(\\u001b[32m\'A bunch of failing tests: \'\\u001b[39m\\u001b[33m,\\u001b[39m () \\u001b[33m=>\\u001b[39m {\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 21 | \\u001b[39m  test(\\u001b[32m\'true should still be true\'\\u001b[39m\\u001b[33m,\\u001b[39m () \\u001b[33m=>\\u001b[39m {\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m\\u001b[31m\\u001b[1m>\\u001b[2m\\u001b[39m\\u001b[90m 22 | \\u001b[39m    expect(\\u001b[36mtrue\\u001b[39m)\\u001b[33m.\\u001b[39mtoBe(\\u001b[36mfalse\\u001b[39m)\\u001b[33m;\\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 23 | \\u001b[39m  })\\u001b[33m;\\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 24 | \\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 25 | \\u001b[39m  test(\\u001b[32m\'a list should contain 3 items\'\\u001b[39m\\u001b[33m,\\u001b[39m () \\u001b[33m=>\\u001b[39m {\\u001b[0m\\u001b[22m\\n\\u001b[2m      \\u001b[22m\\n\\u001b[2m      \\u001b[2mat Object.<anonymous> (\\u001b[2m\\u001b[0m\\u001b[36mexamples/official-storybook/tests/addon-jest.test.js\\u001b[39m\\u001b[0m\\u001b[2m:22:18)\\u001b[2m\\u001b[22m\\n\\n\\u001b[1m\\u001b[31m  \\u001b[1m● \\u001b[1mA bunch of failing tests:  › a list should contain 3 items\\u001b[39m\\u001b[22m\\n\\n    \\u001b[2mexpect(\\u001b[22m\\u001b[31marray\\u001b[39m\\u001b[2m).toContain(\\u001b[22m\\u001b[32mvalue\\u001b[39m\\u001b[2m)\\u001b[22m\\n    \\n    Expected array:\\n      \\u001b[31m[\\"a\\", \\"b\\", \\"3\\"]\\u001b[39m\\n    To contain value:\\n      \\u001b[32m301\\u001b[39m\\n\\u001b[2m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 24 | \\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 25 | \\u001b[39m  test(\\u001b[32m\'a list should contain 3 items\'\\u001b[39m\\u001b[33m,\\u001b[39m () \\u001b[33m=>\\u001b[39m {\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m\\u001b[31m\\u001b[1m>\\u001b[2m\\u001b[39m\\u001b[90m 26 | \\u001b[39m    expect([\\u001b[32m\'a\'\\u001b[39m\\u001b[33m,\\u001b[39m \\u001b[32m\'b\'\\u001b[39m\\u001b[33m,\\u001b[39m \\u001b[32m\'3\'\\u001b[39m])\\u001b[33m.\\u001b[39mtoContain(\\u001b[35m301\\u001b[39m)\\u001b[33m;\\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 27 | \\u001b[39m  })\\u001b[33m;\\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 28 | \\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 29 | \\u001b[39m  test(\\u001b[32m\'should work\'\\u001b[39m\\u001b[33m,\\u001b[39m () \\u001b[33m=>\\u001b[39m {\\u001b[0m\\u001b[22m\\n\\u001b[2m      \\u001b[22m\\n\\u001b[2m      \\u001b[2mat Object.<anonymous> (\\u001b[2m\\u001b[0m\\u001b[36mexamples/official-storybook/tests/addon-jest.test.js\\u001b[39m\\u001b[0m\\u001b[2m:26:29)\\u001b[2m\\u001b[22m\\n\\n\\u001b[1m\\u001b[31m  \\u001b[1m● \\u001b[1mA bunch of failing tests:  › should work\\u001b[39m\\u001b[22m\\n\\n    \\u001b[2mexpect(\\u001b[22m\\u001b[31mfunction\\u001b[39m\\u001b[2m).toThrow(\\u001b[22m\\u001b[32mundefined\\u001b[39m\\u001b[2m)\\u001b[22m\\n    \\n    Expected the function to throw an error.\\n    But it didn\'t throw anything.\\n\\u001b[2m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 28 | \\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 29 | \\u001b[39m  test(\\u001b[32m\'should work\'\\u001b[39m\\u001b[33m,\\u001b[39m () \\u001b[33m=>\\u001b[39m {\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m\\u001b[31m\\u001b[1m>\\u001b[2m\\u001b[39m\\u001b[90m 30 | \\u001b[39m    expect(() \\u001b[33m=>\\u001b[39m {})\\u001b[33m.\\u001b[39mtoThrow()\\u001b[33m;\\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 31 | \\u001b[39m  })\\u001b[33m;\\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 32 | \\u001b[39m})\\u001b[33m;\\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m    \\u001b[0m \\u001b[90m 33 | \\u001b[39m\\u001b[0m\\u001b[22m\\n\\u001b[2m      \\u001b[22m\\n\\u001b[2m      \\u001b[2mat Object.<anonymous> (\\u001b[2m\\u001b[0m\\u001b[36mexamples/official-storybook/tests/addon-jest.test.js\\u001b[39m\\u001b[0m\\u001b[2m:30:28)\\u001b[2m\\u001b[22m\\n","name":"/Users/jetbrains/IdeaProjects/storybook/examples/official-storybook/tests/addon-jest.test.js","startTime":1525471118647,"status":"failed","summary":""}],"wasInterrupted":false}')},function(module,exports,__webpack_require__){__webpack_require__(165),__webpack_require__(190),__webpack_require__(191),__webpack_require__(241),__webpack_require__(377),__webpack_require__(380),__webpack_require__(383),__webpack_require__(395),__webpack_require__(397),__webpack_require__(405),__webpack_require__(409),module.exports=__webpack_require__(415)},,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("ARua")},,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("9JhN")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("PjZX")},,,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(79)},,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("XdyU")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("/Qos")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("JY+C")},,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("ZUdG")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("PuIx")},,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("hpdy")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("N9G2")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("f4p7")},,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("nsO7")},,,,,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("dSaG")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("hQin")},,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("iu90")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("OtWY")},,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("7nmT")},,,,,,,,,,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("LJ7e")},,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("I2fK")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("DY47")},,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("3kp9")},,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("/bc2")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("/JuR")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("+Bxv")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("muFx")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("Wci6")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("WoRU")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("o3fS")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("JmTi")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("xaiR")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("SlD/")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("Monn")},,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("fmNP")},,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("uFXj")},,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("mmUj")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("OCSl")},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("kA4r")},,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("Blm6")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("ssvU")},,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("fRV1")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("maj8")},,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("wC3K")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("zKkv")},,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("3voH")},,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("H87J")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("O1Sc")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("zF5n")},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("RNvQ")},,,,,,,,,function(module,exports,__webpack_require__){"use strict";__webpack_require__(2),__webpack_require__(33),__webpack_require__(31),__webpack_require__(34),__webpack_require__(22),__webpack_require__(410),__webpack_require__(411),__webpack_require__(6),__webpack_require__(32);var _clientApi=__webpack_require__(24),_clientLogger=__webpack_require__(25),_configFilename=__webpack_require__(414);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator)})),(_configFilename.parameters||_configFilename.globalArgs||_configFilename.globalArgTypes)&&(0,_clientApi.addParameters)(_objectSpread(_objectSpread({},_configFilename.parameters),{},{globalArgs:_configFilename.globalArgs,globalArgTypes:_configFilename.globalArgTypes})),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},,,function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("oD4t")},function(module,exports,__webpack_require__){module.exports=__webpack_require__(0)("2sZ7")},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _storybook_html__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(79);Object(_storybook_html__WEBPACK_IMPORTED_MODULE_0__.addParameters)({a11y:{config:{},options:{checks:{"color-contrast":{options:{noScroll:!0}}},restoreScroll:!0}},options:{showRoots:!0},docs:{iframeHeight:"200px"}})},function(module,exports,__webpack_require__){"use strict";(function(module){var _framework=__webpack_require__(79);module._StorybookPreserveDecorators=!0,(0,_framework.configure)([__webpack_require__(416)],module)}).call(this,__webpack_require__(41)(module))},function(module,exports,__webpack_require__){var map={"./addon-a11y.stories.js":417,"./addon-actions.stories.js":418,"./addon-backgrounds.stories.js":419,"./addon-docs.stories.mdx":420,"./addon-events.stories.js":421,"./addon-jest.stories.js":427,"./addon-knobs.stories.js":431,"./alert.stories.js":432,"./button.stories.js":433,"./source-loader.stories.js":434,"./welcome.stories.js":435};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=416},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Label",(function(){return Label})),__webpack_require__.d(__webpack_exports__,"Disabled",(function(){return Disabled})),__webpack_require__.d(__webpack_exports__,"Story4",(function(){return Story4})),__webpack_require__.d(__webpack_exports__,"Story5",(function(){return Story5}));__webpack_require__(22);var _parameters,global__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(20);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var text="Testing the a11y addon";__webpack_exports__.default={title:"Addons/a11y",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { document, setTimeout } from \'global\';\\n\\nconst text = \'Testing the a11y addon\';\\n\\nexport default {\\n  title: \'Addons/a11y\',\\n  parameters: {\\n    options: { selectedPanel: \'storybook/a11y/panel\' },\\n  },\\n};\\n\\nexport const Default = () => `<button></button>`;\\nexport const Label = () => `<button>${text}</button>`;\\nexport const Disabled = () => `<button disabled>${text}</button>`;\\nexport const Story4 = () =>\\n  `<button style=\\"color: black; background-color: brown;\\">${text}</button>`;\\nStory4.story = { name: \'Invalid contrast\' };\\n\\nexport const Story5 = () => {\\n  const div = document.createElement(\'div\');\\n  setTimeout(() => {\\n    div.innerHTML = `<button>This button has a delayed render of 1s</button>`;\\n  }, 1000);\\n  return div;\\n};\\nStory5.story = { name: \'Delayed render\' };\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"addons-a11y--default":{"startLoc":{"col":23,"line":12},"endLoc":{"col":48,"line":12},"startBody":{"col":23,"line":12},"endBody":{"col":48,"line":12}},"addons-a11y--label":{"startLoc":{"col":21,"line":13},"endLoc":{"col":53,"line":13},"startBody":{"col":21,"line":13},"endBody":{"col":53,"line":13}},"addons-a11y--disabled":{"startLoc":{"col":24,"line":14},"endLoc":{"col":65,"line":14},"startBody":{"col":24,"line":14},"endBody":{"col":65,"line":14}},"addons-a11y--story-4":{"startLoc":{"col":22,"line":15},"endLoc":{"col":75,"line":16},"startBody":{"col":22,"line":15},"endBody":{"col":75,"line":16}},"addons-a11y--story-5":{"startLoc":{"col":22,"line":19},"endLoc":{"col":1,"line":25},"startBody":{"col":22,"line":19},"endBody":{"col":1,"line":25}}};\n    \nimport { document, setTimeout } from \'global\';\n\nconst text = \'Testing the a11y addon\';\n\nexport default {\n  title: \'Addons/a11y\',\n  parameters: {"storySource":{"source":"import { document, setTimeout } from \'global\';\\n\\nconst text = \'Testing the a11y addon\';\\n\\nexport default {\\n  title: \'Addons/a11y\',\\n  parameters: {\\n    options: { selectedPanel: \'storybook/a11y/panel\' },\\n  },\\n};\\n\\nexport const Default = () => `<button></button>`;\\nexport const Label = () => `<button>${text}</button>`;\\nexport const Disabled = () => `<button disabled>${text}</button>`;\\nexport const Story4 = () =>\\n  `<button style=\\"color: black; background-color: brown;\\">${text}</button>`;\\nStory4.story = { name: \'Invalid contrast\' };\\n\\nexport const Story5 = () => {\\n  const div = document.createElement(\'div\');\\n  setTimeout(() => {\\n    div.innerHTML = `<button>This button has a delayed render of 1s</button>`;\\n  }, 1000);\\n  return div;\\n};\\nStory5.story = { name: \'Delayed render\' };\\n","locationsMap":{"addons-a11y--default":{"startLoc":{"col":23,"line":12},"endLoc":{"col":48,"line":12},"startBody":{"col":23,"line":12},"endBody":{"col":48,"line":12}},"addons-a11y--label":{"startLoc":{"col":21,"line":13},"endLoc":{"col":53,"line":13},"startBody":{"col":21,"line":13},"endBody":{"col":53,"line":13}},"addons-a11y--disabled":{"startLoc":{"col":24,"line":14},"endLoc":{"col":65,"line":14},"startBody":{"col":24,"line":14},"endBody":{"col":65,"line":14}},"addons-a11y--story-4":{"startLoc":{"col":22,"line":15},"endLoc":{"col":75,"line":16},"startBody":{"col":22,"line":15},"endBody":{"col":75,"line":16}},"addons-a11y--story-5":{"startLoc":{"col":22,"line":19},"endLoc":{"col":1,"line":25},"startBody":{"col":22,"line":19},"endBody":{"col":1,"line":25}}}},\n    options: { selectedPanel: \'storybook/a11y/panel\' },\n  },\n};\n\nexport const Default = () => `<button></button>`;;\nexport const Label = () => `<button>${text}</button>`;;\nexport const Disabled = () => `<button disabled>${text}</button>`;;\nexport const Story4 = () =>\n  `<button style="color: black; background-color: brown;">${text}</button>`;;\nStory4.story = { name: \'Invalid contrast\' };\n\nexport const Story5 = () => {\n  const div = document.createElement(\'div\');\n  setTimeout(() => {\n    div.innerHTML = `<button>This button has a delayed render of 1s</button>`;\n  }, 1000);\n  return div;\n};\nStory5.story = { name: \'Delayed render\' };\n',locationsMap:{"addons-a11y--default":{startLoc:{col:23,line:20},endLoc:{col:48,line:20},startBody:{col:23,line:20},endBody:{col:48,line:20}},"addons-a11y--label":{startLoc:{col:21,line:21},endLoc:{col:53,line:21},startBody:{col:21,line:21},endBody:{col:53,line:21}},"addons-a11y--disabled":{startLoc:{col:24,line:22},endLoc:{col:65,line:22},startBody:{col:24,line:22},endBody:{col:65,line:22}},"addons-a11y--story-4":{startLoc:{col:22,line:23},endLoc:{col:75,line:24},startBody:{col:22,line:23},endBody:{col:75,line:24}},"addons-a11y--story-5":{startLoc:{col:22,line:27},endLoc:{col:1,line:33},startBody:{col:22,line:27},endBody:{col:1,line:33}}}}},_defineProperty(_parameters,"storySource",{source:"import { document, setTimeout } from 'global';\n\nconst text = 'Testing the a11y addon';\n\nexport default {\n  title: 'Addons/a11y',\n  parameters: {\n    options: { selectedPanel: 'storybook/a11y/panel' },\n  },\n};\n\nexport const Default = () => `<button></button>`;\nexport const Label = () => `<button>${text}</button>`;\nexport const Disabled = () => `<button disabled>${text}</button>`;\nexport const Story4 = () =>\n  `<button style=\"color: black; background-color: brown;\">${text}</button>`;\nStory4.story = { name: 'Invalid contrast' };\n\nexport const Story5 = () => {\n  const div = document.createElement('div');\n  setTimeout(() => {\n    div.innerHTML = `<button>This button has a delayed render of 1s</button>`;\n  }, 1000);\n  return div;\n};\nStory5.story = { name: 'Delayed render' };\n",locationsMap:{"addons-a11y--default":{startLoc:{col:23,line:12},endLoc:{col:48,line:12},startBody:{col:23,line:12},endBody:{col:48,line:12}},"addons-a11y--label":{startLoc:{col:21,line:13},endLoc:{col:53,line:13},startBody:{col:21,line:13},endBody:{col:53,line:13}},"addons-a11y--disabled":{startLoc:{col:24,line:14},endLoc:{col:65,line:14},startBody:{col:24,line:14},endBody:{col:65,line:14}},"addons-a11y--story-4":{startLoc:{col:22,line:15},endLoc:{col:75,line:16},startBody:{col:22,line:15},endBody:{col:75,line:16}},"addons-a11y--story-5":{startLoc:{col:22,line:19},endLoc:{col:1,line:25},startBody:{col:22,line:19},endBody:{col:1,line:25}}}}),_defineProperty(_parameters,"options",{selectedPanel:"storybook/a11y/panel"}),_parameters)};var Default=function Default(){return"<button></button>"},Label=function Label(){return"<button>".concat(text,"</button>")},Disabled=function Disabled(){return"<button disabled>".concat(text,"</button>")},Story4=function Story4(){return'<button style="color: black; background-color: brown;">'.concat(text,"</button>")};Story4.story={name:"Invalid contrast"};var Story5=function Story5(){var div=global__WEBPACK_IMPORTED_MODULE_1__.document.createElement("div");return Object(global__WEBPACK_IMPORTED_MODULE_1__.setTimeout)((function(){div.innerHTML="<button>This button has a delayed render of 1s</button>"}),1e3),div};Story5.story={name:"Delayed render"}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Story1",(function(){return Story1})),__webpack_require__.d(__webpack_exports__,"Story2",(function(){return Story2})),__webpack_require__.d(__webpack_exports__,"Story3",(function(){return Story3})),__webpack_require__.d(__webpack_exports__,"Story4",(function(){return Story4})),__webpack_require__.d(__webpack_exports__,"Story5",(function(){return Story5})),__webpack_require__.d(__webpack_exports__,"Story6",(function(){return Story6})),__webpack_require__.d(__webpack_exports__,"Story7",(function(){return Story7})),__webpack_require__.d(__webpack_exports__,"Story8",(function(){return Story8}));__webpack_require__(22);var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(30);var pickTarget=Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.decorate)([function(args){return[args[0].target]}]),button=function button(){return'<button type="button">Hello World</button>'};__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { withActions, decorate } from \'@storybook/addon-actions\';\\n\\nconst pickTarget = decorate([args => [args[0].target]]);\\n\\nconst button = () => `<button type=\\"button\\">Hello World</button>`;\\n\\nexport default {\\n  title: \'Addons/Actions\',\\n};\\n\\nexport const Story1 = () => withActions(\'click\')(button);\\nStory1.story = { name: \'Hello World\' };\\nexport const Story2 = () => withActions(\'click\', \'contextmenu\')(button);\\nStory2.story = { name: \'Multiple actions\' };\\n\\nexport const Story3 = () =>\\n  withActions(\'click\', \'contextmenu\', { clearOnStoryChange: false })(button);\\nStory3.story = { name: \'Multiple actions + config\' };\\n\\nexport const Story4 = () => withActions({ click: \'clicked\', contextmenu: \'right clicked\' })(button);\\nStory4.story = { name: \'Multiple actions, object\' };\\n\\nexport const Story5 = () =>\\n  withActions({ \'click .btn\': \'clicked\', contextmenu: \'right clicked\' })(\\n    () => `\\n        <div>\\n          Clicks on this button will be logged: <button class=\\"btn\\" type=\\"button\\">Button</button>\\n        </div>\\n      `\\n  );\\nStory5.story = { name: \'Multiple actions, selector\' };\\n\\nexport const Story6 = () =>\\n  withActions(\\n    { click: \'clicked\', contextmenu: \'right clicked\' },\\n    { clearOnStoryChange: false }\\n  )(button);\\nStory6.story = { name: \'Multiple actions, object + config\' };\\n\\nexport const Story7 = () => pickTarget.withActions(\'click\', \'contextmenu\')(button);\\nStory7.story = { name: \'Decorated actions\' };\\n\\nexport const Story8 = () =>\\n  pickTarget.withActions(\'click\', \'contextmenu\', { clearOnStoryChange: false })(button);\\nStory8.story = { name: \'Decorated actions + config\' };\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"addons-actions--story-1":{"startLoc":{"col":22,"line":11},"endLoc":{"col":56,"line":11},"startBody":{"col":22,"line":11},"endBody":{"col":56,"line":11}},"addons-actions--story-2":{"startLoc":{"col":22,"line":13},"endLoc":{"col":71,"line":13},"startBody":{"col":22,"line":13},"endBody":{"col":71,"line":13}},"addons-actions--story-3":{"startLoc":{"col":22,"line":16},"endLoc":{"col":76,"line":17},"startBody":{"col":22,"line":16},"endBody":{"col":76,"line":17}},"addons-actions--story-4":{"startLoc":{"col":22,"line":20},"endLoc":{"col":99,"line":20},"startBody":{"col":22,"line":20},"endBody":{"col":99,"line":20}},"addons-actions--story-5":{"startLoc":{"col":22,"line":23},"endLoc":{"col":3,"line":30},"startBody":{"col":22,"line":23},"endBody":{"col":3,"line":30}},"addons-actions--story-6":{"startLoc":{"col":22,"line":33},"endLoc":{"col":11,"line":37},"startBody":{"col":22,"line":33},"endBody":{"col":11,"line":37}},"addons-actions--story-7":{"startLoc":{"col":22,"line":40},"endLoc":{"col":82,"line":40},"startBody":{"col":22,"line":40},"endBody":{"col":82,"line":40}},"addons-actions--story-8":{"startLoc":{"col":22,"line":43},"endLoc":{"col":87,"line":44},"startBody":{"col":22,"line":43},"endBody":{"col":87,"line":44}}};\n    \nimport { withActions, decorate } from \'@storybook/addon-actions\';\n\nconst pickTarget = decorate([args => [args[0].target]]);\n\nconst button = () => `<button type="button">Hello World</button>`;\n\nexport default {parameters: {"storySource":{"source":"import { withActions, decorate } from \'@storybook/addon-actions\';\\n\\nconst pickTarget = decorate([args => [args[0].target]]);\\n\\nconst button = () => `<button type=\\"button\\">Hello World</button>`;\\n\\nexport default {\\n  title: \'Addons/Actions\',\\n};\\n\\nexport const Story1 = () => withActions(\'click\')(button);\\nStory1.story = { name: \'Hello World\' };\\nexport const Story2 = () => withActions(\'click\', \'contextmenu\')(button);\\nStory2.story = { name: \'Multiple actions\' };\\n\\nexport const Story3 = () =>\\n  withActions(\'click\', \'contextmenu\', { clearOnStoryChange: false })(button);\\nStory3.story = { name: \'Multiple actions + config\' };\\n\\nexport const Story4 = () => withActions({ click: \'clicked\', contextmenu: \'right clicked\' })(button);\\nStory4.story = { name: \'Multiple actions, object\' };\\n\\nexport const Story5 = () =>\\n  withActions({ \'click .btn\': \'clicked\', contextmenu: \'right clicked\' })(\\n    () => `\\n        <div>\\n          Clicks on this button will be logged: <button class=\\"btn\\" type=\\"button\\">Button</button>\\n        </div>\\n      `\\n  );\\nStory5.story = { name: \'Multiple actions, selector\' };\\n\\nexport const Story6 = () =>\\n  withActions(\\n    { click: \'clicked\', contextmenu: \'right clicked\' },\\n    { clearOnStoryChange: false }\\n  )(button);\\nStory6.story = { name: \'Multiple actions, object + config\' };\\n\\nexport const Story7 = () => pickTarget.withActions(\'click\', \'contextmenu\')(button);\\nStory7.story = { name: \'Decorated actions\' };\\n\\nexport const Story8 = () =>\\n  pickTarget.withActions(\'click\', \'contextmenu\', { clearOnStoryChange: false })(button);\\nStory8.story = { name: \'Decorated actions + config\' };\\n","locationsMap":{"addons-actions--story-1":{"startLoc":{"col":22,"line":11},"endLoc":{"col":56,"line":11},"startBody":{"col":22,"line":11},"endBody":{"col":56,"line":11}},"addons-actions--story-2":{"startLoc":{"col":22,"line":13},"endLoc":{"col":71,"line":13},"startBody":{"col":22,"line":13},"endBody":{"col":71,"line":13}},"addons-actions--story-3":{"startLoc":{"col":22,"line":16},"endLoc":{"col":76,"line":17},"startBody":{"col":22,"line":16},"endBody":{"col":76,"line":17}},"addons-actions--story-4":{"startLoc":{"col":22,"line":20},"endLoc":{"col":99,"line":20},"startBody":{"col":22,"line":20},"endBody":{"col":99,"line":20}},"addons-actions--story-5":{"startLoc":{"col":22,"line":23},"endLoc":{"col":3,"line":30},"startBody":{"col":22,"line":23},"endBody":{"col":3,"line":30}},"addons-actions--story-6":{"startLoc":{"col":22,"line":33},"endLoc":{"col":11,"line":37},"startBody":{"col":22,"line":33},"endBody":{"col":11,"line":37}},"addons-actions--story-7":{"startLoc":{"col":22,"line":40},"endLoc":{"col":82,"line":40},"startBody":{"col":22,"line":40},"endBody":{"col":82,"line":40}},"addons-actions--story-8":{"startLoc":{"col":22,"line":43},"endLoc":{"col":87,"line":44},"startBody":{"col":22,"line":43},"endBody":{"col":87,"line":44}}}},},\n  title: \'Addons/Actions\',\n};\n\nexport const Story1 = () => withActions(\'click\')(button);;\nStory1.story = { name: \'Hello World\' };\nexport const Story2 = () => withActions(\'click\', \'contextmenu\')(button);;\nStory2.story = { name: \'Multiple actions\' };\n\nexport const Story3 = () =>\n  withActions(\'click\', \'contextmenu\', { clearOnStoryChange: false })(button);;\nStory3.story = { name: \'Multiple actions + config\' };\n\nexport const Story4 = () => withActions({ click: \'clicked\', contextmenu: \'right clicked\' })(button);;\nStory4.story = { name: \'Multiple actions, object\' };\n\nexport const Story5 = () =>\n  withActions({ \'click .btn\': \'clicked\', contextmenu: \'right clicked\' })(\n    () => `\n        <div>\n          Clicks on this button will be logged: <button class="btn" type="button">Button</button>\n        </div>\n      `\n  );;\nStory5.story = { name: \'Multiple actions, selector\' };\n\nexport const Story6 = () =>\n  withActions(\n    { click: \'clicked\', contextmenu: \'right clicked\' },\n    { clearOnStoryChange: false }\n  )(button);;\nStory6.story = { name: \'Multiple actions, object + config\' };\n\nexport const Story7 = () => pickTarget.withActions(\'click\', \'contextmenu\')(button);;\nStory7.story = { name: \'Decorated actions\' };\n\nexport const Story8 = () =>\n  pickTarget.withActions(\'click\', \'contextmenu\', { clearOnStoryChange: false })(button);\nStory8.story = { name: \'Decorated actions + config\' };\n',locationsMap:{"addons-actions--story-1":{startLoc:{col:22,line:19},endLoc:{col:56,line:19},startBody:{col:22,line:19},endBody:{col:56,line:19}},"addons-actions--story-2":{startLoc:{col:22,line:21},endLoc:{col:71,line:21},startBody:{col:22,line:21},endBody:{col:71,line:21}},"addons-actions--story-3":{startLoc:{col:22,line:24},endLoc:{col:76,line:25},startBody:{col:22,line:24},endBody:{col:76,line:25}},"addons-actions--story-4":{startLoc:{col:22,line:28},endLoc:{col:99,line:28},startBody:{col:22,line:28},endBody:{col:99,line:28}},"addons-actions--story-5":{startLoc:{col:22,line:31},endLoc:{col:3,line:38},startBody:{col:22,line:31},endBody:{col:3,line:38}},"addons-actions--story-6":{startLoc:{col:22,line:41},endLoc:{col:11,line:45},startBody:{col:22,line:41},endBody:{col:11,line:45}},"addons-actions--story-7":{startLoc:{col:22,line:48},endLoc:{col:82,line:48},startBody:{col:22,line:48},endBody:{col:82,line:48}},"addons-actions--story-8":{startLoc:{col:22,line:51},endLoc:{col:87,line:52},startBody:{col:22,line:51},endBody:{col:87,line:52}}}}},"storySource",{source:"import { withActions, decorate } from '@storybook/addon-actions';\n\nconst pickTarget = decorate([args => [args[0].target]]);\n\nconst button = () => `<button type=\"button\">Hello World</button>`;\n\nexport default {\n  title: 'Addons/Actions',\n};\n\nexport const Story1 = () => withActions('click')(button);\nStory1.story = { name: 'Hello World' };\nexport const Story2 = () => withActions('click', 'contextmenu')(button);\nStory2.story = { name: 'Multiple actions' };\n\nexport const Story3 = () =>\n  withActions('click', 'contextmenu', { clearOnStoryChange: false })(button);\nStory3.story = { name: 'Multiple actions + config' };\n\nexport const Story4 = () => withActions({ click: 'clicked', contextmenu: 'right clicked' })(button);\nStory4.story = { name: 'Multiple actions, object' };\n\nexport const Story5 = () =>\n  withActions({ 'click .btn': 'clicked', contextmenu: 'right clicked' })(\n    () => `\n        <div>\n          Clicks on this button will be logged: <button class=\"btn\" type=\"button\">Button</button>\n        </div>\n      `\n  );\nStory5.story = { name: 'Multiple actions, selector' };\n\nexport const Story6 = () =>\n  withActions(\n    { click: 'clicked', contextmenu: 'right clicked' },\n    { clearOnStoryChange: false }\n  )(button);\nStory6.story = { name: 'Multiple actions, object + config' };\n\nexport const Story7 = () => pickTarget.withActions('click', 'contextmenu')(button);\nStory7.story = { name: 'Decorated actions' };\n\nexport const Story8 = () =>\n  pickTarget.withActions('click', 'contextmenu', { clearOnStoryChange: false })(button);\nStory8.story = { name: 'Decorated actions + config' };\n",locationsMap:{"addons-actions--story-1":{startLoc:{col:22,line:11},endLoc:{col:56,line:11},startBody:{col:22,line:11},endBody:{col:56,line:11}},"addons-actions--story-2":{startLoc:{col:22,line:13},endLoc:{col:71,line:13},startBody:{col:22,line:13},endBody:{col:71,line:13}},"addons-actions--story-3":{startLoc:{col:22,line:16},endLoc:{col:76,line:17},startBody:{col:22,line:16},endBody:{col:76,line:17}},"addons-actions--story-4":{startLoc:{col:22,line:20},endLoc:{col:99,line:20},startBody:{col:22,line:20},endBody:{col:99,line:20}},"addons-actions--story-5":{startLoc:{col:22,line:23},endLoc:{col:3,line:30},startBody:{col:22,line:23},endBody:{col:3,line:30}},"addons-actions--story-6":{startLoc:{col:22,line:33},endLoc:{col:11,line:37},startBody:{col:22,line:33},endBody:{col:11,line:37}},"addons-actions--story-7":{startLoc:{col:22,line:40},endLoc:{col:82,line:40},startBody:{col:22,line:40},endBody:{col:82,line:40}},"addons-actions--story-8":{startLoc:{col:22,line:43},endLoc:{col:87,line:44},startBody:{col:22,line:43},endBody:{col:87,line:44}}}}),title:"Addons/Actions"};var Story1=function Story1(){return Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.withActions)("click")(button)};Story1.story={name:"Hello World"};var Story2=function Story2(){return Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.withActions)("click","contextmenu")(button)};Story2.story={name:"Multiple actions"};var Story3=function Story3(){return Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.withActions)("click","contextmenu",{clearOnStoryChange:!1})(button)};Story3.story={name:"Multiple actions + config"};var Story4=function Story4(){return Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.withActions)({click:"clicked",contextmenu:"right clicked"})(button)};Story4.story={name:"Multiple actions, object"};var Story5=function Story5(){return Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.withActions)({"click .btn":"clicked",contextmenu:"right clicked"})((function(){return'\n        <div>\n          Clicks on this button will be logged: <button class="btn" type="button">Button</button>\n        </div>\n      '}))};Story5.story={name:"Multiple actions, selector"};var Story6=function Story6(){return Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.withActions)({click:"clicked",contextmenu:"right clicked"},{clearOnStoryChange:!1})(button)};Story6.story={name:"Multiple actions, object + config"};var Story7=function Story7(){return pickTarget.withActions("click","contextmenu")(button)};Story7.story={name:"Decorated actions"};var Story8=function Story8(){return pickTarget.withActions("click","contextmenu",{clearOnStoryChange:!1})(button)};Story8.story={name:"Decorated actions + config"}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Story1",(function(){return Story1})),__webpack_require__.d(__webpack_exports__,"Story2",(function(){return Story2}));var _parameters;__webpack_require__(22);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Addons/Backgrounds",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "export default {\\n  title: \'Addons/Backgrounds\',\\n  parameters: {\\n    backgrounds: [\\n      { name: \'light\', value: \'#eeeeee\' },\\n      { name: \'dark\', value: \'#222222\', default: true },\\n    ],\\n  },\\n};\\n\\nexport const Story1 = () =>\\n  \'<span style=\\"color: white\\">You should be able to switch backgrounds for this story</span>\';\\nStory1.story = { name: \'story 1\' };\\n\\nexport const Story2 = () => \'<span style=\\"color: white\\">This one too!</span>\';\\nStory2.story = { name: \'story 2\' };\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"addons-backgrounds--story-1":{"startLoc":{"col":22,"line":11},"endLoc":{"col":93,"line":12},"startBody":{"col":22,"line":11},"endBody":{"col":93,"line":12}},"addons-backgrounds--story-2":{"startLoc":{"col":22,"line":15},"endLoc":{"col":77,"line":15},"startBody":{"col":22,"line":15},"endBody":{"col":77,"line":15}}};\n    \nexport default {\n  title: \'Addons/Backgrounds\',\n  parameters: {"storySource":{"source":"export default {\\n  title: \'Addons/Backgrounds\',\\n  parameters: {\\n    backgrounds: [\\n      { name: \'light\', value: \'#eeeeee\' },\\n      { name: \'dark\', value: \'#222222\', default: true },\\n    ],\\n  },\\n};\\n\\nexport const Story1 = () =>\\n  \'<span style=\\"color: white\\">You should be able to switch backgrounds for this story</span>\';\\nStory1.story = { name: \'story 1\' };\\n\\nexport const Story2 = () => \'<span style=\\"color: white\\">This one too!</span>\';\\nStory2.story = { name: \'story 2\' };\\n","locationsMap":{"addons-backgrounds--story-1":{"startLoc":{"col":22,"line":11},"endLoc":{"col":93,"line":12},"startBody":{"col":22,"line":11},"endBody":{"col":93,"line":12}},"addons-backgrounds--story-2":{"startLoc":{"col":22,"line":15},"endLoc":{"col":77,"line":15},"startBody":{"col":22,"line":15},"endBody":{"col":77,"line":15}}}},\n    backgrounds: [\n      { name: \'light\', value: \'#eeeeee\' },\n      { name: \'dark\', value: \'#222222\', default: true },\n    ],\n  },\n};\n\nexport const Story1 = () =>\n  \'<span style="color: white">You should be able to switch backgrounds for this story</span>\';;\nStory1.story = { name: \'story 1\' };\n\nexport const Story2 = () => \'<span style="color: white">This one too!</span>\';\nStory2.story = { name: \'story 2\' };\n',locationsMap:{"addons-backgrounds--story-1":{startLoc:{col:22,line:19},endLoc:{col:93,line:20},startBody:{col:22,line:19},endBody:{col:93,line:20}},"addons-backgrounds--story-2":{startLoc:{col:22,line:23},endLoc:{col:77,line:23},startBody:{col:22,line:23},endBody:{col:77,line:23}}}}},_defineProperty(_parameters,"storySource",{source:"export default {\n  title: 'Addons/Backgrounds',\n  parameters: {\n    backgrounds: [\n      { name: 'light', value: '#eeeeee' },\n      { name: 'dark', value: '#222222', default: true },\n    ],\n  },\n};\n\nexport const Story1 = () =>\n  '<span style=\"color: white\">You should be able to switch backgrounds for this story</span>';\nStory1.story = { name: 'story 1' };\n\nexport const Story2 = () => '<span style=\"color: white\">This one too!</span>';\nStory2.story = { name: 'story 2' };\n",locationsMap:{"addons-backgrounds--story-1":{startLoc:{col:22,line:11},endLoc:{col:93,line:12},startBody:{col:22,line:11},endBody:{col:93,line:12}},"addons-backgrounds--story-2":{startLoc:{col:22,line:15},endLoc:{col:77,line:15},startBody:{col:22,line:15},endBody:{col:77,line:15}}}}),_defineProperty(_parameters,"backgrounds",[{name:"light",value:"#eeeeee"},{name:"dark",value:"#222222",default:!0}]),_parameters)};var Story1=function Story1(){return'<span style="color: white">You should be able to switch backgrounds for this story</span>'};Story1.story={name:"story 1"};var Story2=function Story2(){return'<span style="color: white">This one too!</span>'};Story2.story={name:"story 2"}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"heading",(function(){return heading})),__webpack_require__.d(__webpack_exports__,"functionStory",(function(){return functionStory}));__webpack_require__(2),__webpack_require__(9),__webpack_require__(3),__webpack_require__(6),__webpack_require__(1);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(26),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(57),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(30);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"storybook-docs-for-html"},"Storybook Docs for HTML"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"Addons/Docs",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"story-definition"},"Story definition"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"Hallelujah! HTML is working out of the box without modification.\nHow you like them apples?!"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{name:"heading",height:"100px",mdxType:"Story"},"<h1>Hello World</h1>"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"function-stories"},"Function stories"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{name:"function",height:"100px",mdxType:"Story"},(function(){var btn=document.createElement("button");return btn.innerHTML="Hello Button",btn.addEventListener("click",Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_7__.action)("Click")),btn})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"story-reference"},"Story reference"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"You can also reference an existing story from within your MDX file."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"welcome--welcome",height:"800px",mdxType:"Story"}))}MDXContent.isMDXComponent=!0;var heading=function heading(){return"<h1>Hello World</h1>"};heading.storyName="heading",heading.parameters={storySource:{source:"'<h1>Hello World</h1>'"}};var functionStory=function functionStory(){var btn=document.createElement("button");return btn.innerHTML="Hello Button",btn.addEventListener("click",Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_7__.action)("Click")),btn};functionStory.storyName="function",functionStory.parameters={storySource:{source:"() => {\n  const btn = document.createElement('button');\n  btn.innerHTML = 'Hello Button';\n  btn.addEventListener('click', action('Click'));\n  return btn;\n}"}};var componentMeta={title:"Addons/Docs",includeStories:["heading","functionStory"]},mdxStoryNameToKey={heading:"heading",function:"functionStory"};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Logger",(function(){return Logger}));__webpack_require__(2),__webpack_require__(7),__webpack_require__(19),__webpack_require__(11),__webpack_require__(31),__webpack_require__(23),__webpack_require__(10),__webpack_require__(17),__webpack_require__(37),__webpack_require__(13),__webpack_require__(12),__webpack_require__(14),__webpack_require__(85),__webpack_require__(4),__webpack_require__(22),__webpack_require__(8),__webpack_require__(47),__webpack_require__(16),__webpack_require__(15),__webpack_require__(32),__webpack_require__(18);var eventemitter3__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(159),eventemitter3__WEBPACK_IMPORTED_MODULE_21___default=__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_21__),_storybook_client_api__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(24),format_json__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(160),format_json__WEBPACK_IMPORTED_MODULE_23___default=__webpack_require__.n(format_json__WEBPACK_IMPORTED_MODULE_23__),_storybook_addon_events__WEBPACK_IMPORTED_MODULE_24__=__webpack_require__(161),_storybook_addon_events__WEBPACK_IMPORTED_MODULE_24___default=__webpack_require__.n(_storybook_addon_events__WEBPACK_IMPORTED_MODULE_24__);__webpack_require__(423);function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var TEST_EVENTS={TEST_EVENT_1:"test-event-1",TEST_EVENT_2:"test-event-2",TEST_EVENT_3:"test-event-3",TEST_EVENT_4:"test-event-4"},emitter=new eventemitter3__WEBPACK_IMPORTED_MODULE_21___default.a,emit=emitter.emit.bind(emitter);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:"\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = \"import EventEmitter from 'eventemitter3';\\nimport { useEffect, useState } from '@storybook/client-api';\\nimport json from 'format-json';\\n\\nimport withEvents from '@storybook/addon-events';\\n\\nimport './addon-events.css';\\n\\nconst TEST_EVENTS = {\\n  TEST_EVENT_1: 'test-event-1',\\n  TEST_EVENT_2: 'test-event-2',\\n  TEST_EVENT_3: 'test-event-3',\\n  TEST_EVENT_4: 'test-event-4',\\n};\\n\\nconst emitter = new EventEmitter();\\nconst emit = emitter.emit.bind(emitter);\\n\\nexport default {\\n  title: 'Addons/Events',\\n  decorators: [\\n    withEvents({\\n      emit,\\n      events: [\\n        {\\n          name: TEST_EVENTS.TEST_EVENT_1,\\n          title: 'Test event 1',\\n          payload: 0,\\n        },\\n        {\\n          name: TEST_EVENTS.TEST_EVENT_2,\\n          title: 'Test event 2',\\n          payload: 'Test event 2',\\n        },\\n        {\\n          name: TEST_EVENTS.TEST_EVENT_3,\\n          title: 'Test event 3',\\n          payload: {\\n            string: 'value',\\n            number: 123,\\n            array: [1, 2, 3],\\n            object: {\\n              string: 'value',\\n              number: 123,\\n              array: [1, 2, 3],\\n            },\\n          },\\n        },\\n        {\\n          name: TEST_EVENTS.TEST_EVENT_4,\\n          title: 'Test event 4',\\n          payload: [\\n            {\\n              string: 'value',\\n              number: 123,\\n              array: [1, 2, 3],\\n            },\\n            {\\n              string: 'value',\\n              number: 123,\\n              array: [1, 2, 3],\\n            },\\n            {\\n              string: 'value',\\n              number: 123,\\n              array: [1, 2, 3],\\n            },\\n          ],\\n        },\\n      ],\\n    }),\\n  ],\\n};\\n\\nexport const Logger = () => {\\n  const [events, setEvents] = useState([]);\\n  useEffect(() => {\\n    const eventHandlers = Object.values(TEST_EVENTS).map(name => ({\\n      name,\\n      handler: payload => {\\n        setEvents(prevEvents => [...prevEvents, { name, payload }]);\\n      },\\n    }));\\n    eventHandlers.forEach(({ name, handler }) => emitter.on(name, handler));\\n    return () =>\\n      eventHandlers.forEach(({ name, handler }) => emitter.removeListener(name, handler));\\n  }, []);\\n\\n  return `\\n    <div class=\\\"wrapper\\\">\\n      <h1 class=\\\"title\\\">Logger</h1>\\n      <dl>\\n        ${events\\n          .map(\\n            ({ name, payload }) => `\\n              <div class=\\\"item\\\">\\n                <dt>\\n                  <b>Event name:</b> ${name}\\n                </dt>\\n                <dd>\\n                  <b>Event payload:</b> ${json.plain(payload)}\\n                </dd>\\n              </div>\\n            `\\n          )\\n          .join('')}\\n      </dl>\\n    </div>\\n  `;\\n};\\n\";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {\"addons-events--logger\":{\"startLoc\":{\"col\":22,\"line\":75},\"endLoc\":{\"col\":1,\"line\":110},\"startBody\":{\"col\":22,\"line\":75},\"endBody\":{\"col\":1,\"line\":110}}};\n    \nimport EventEmitter from 'eventemitter3';\nimport { useEffect, useState } from '@storybook/client-api';\nimport json from 'format-json';\n\nimport withEvents from '@storybook/addon-events';\n\nimport './addon-events.css';\n\nconst TEST_EVENTS = {\n  TEST_EVENT_1: 'test-event-1',\n  TEST_EVENT_2: 'test-event-2',\n  TEST_EVENT_3: 'test-event-3',\n  TEST_EVENT_4: 'test-event-4',\n};\n\nconst emitter = new EventEmitter();\nconst emit = emitter.emit.bind(emitter);\n\nexport default {parameters: {\"storySource\":{\"source\":\"import EventEmitter from 'eventemitter3';\\nimport { useEffect, useState } from '@storybook/client-api';\\nimport json from 'format-json';\\n\\nimport withEvents from '@storybook/addon-events';\\n\\nimport './addon-events.css';\\n\\nconst TEST_EVENTS = {\\n  TEST_EVENT_1: 'test-event-1',\\n  TEST_EVENT_2: 'test-event-2',\\n  TEST_EVENT_3: 'test-event-3',\\n  TEST_EVENT_4: 'test-event-4',\\n};\\n\\nconst emitter = new EventEmitter();\\nconst emit = emitter.emit.bind(emitter);\\n\\nexport default {\\n  title: 'Addons/Events',\\n  decorators: [\\n    withEvents({\\n      emit,\\n      events: [\\n        {\\n          name: TEST_EVENTS.TEST_EVENT_1,\\n          title: 'Test event 1',\\n          payload: 0,\\n        },\\n        {\\n          name: TEST_EVENTS.TEST_EVENT_2,\\n          title: 'Test event 2',\\n          payload: 'Test event 2',\\n        },\\n        {\\n          name: TEST_EVENTS.TEST_EVENT_3,\\n          title: 'Test event 3',\\n          payload: {\\n            string: 'value',\\n            number: 123,\\n            array: [1, 2, 3],\\n            object: {\\n              string: 'value',\\n              number: 123,\\n              array: [1, 2, 3],\\n            },\\n          },\\n        },\\n        {\\n          name: TEST_EVENTS.TEST_EVENT_4,\\n          title: 'Test event 4',\\n          payload: [\\n            {\\n              string: 'value',\\n              number: 123,\\n              array: [1, 2, 3],\\n            },\\n            {\\n              string: 'value',\\n              number: 123,\\n              array: [1, 2, 3],\\n            },\\n            {\\n              string: 'value',\\n              number: 123,\\n              array: [1, 2, 3],\\n            },\\n          ],\\n        },\\n      ],\\n    }),\\n  ],\\n};\\n\\nexport const Logger = () => {\\n  const [events, setEvents] = useState([]);\\n  useEffect(() => {\\n    const eventHandlers = Object.values(TEST_EVENTS).map(name => ({\\n      name,\\n      handler: payload => {\\n        setEvents(prevEvents => [...prevEvents, { name, payload }]);\\n      },\\n    }));\\n    eventHandlers.forEach(({ name, handler }) => emitter.on(name, handler));\\n    return () =>\\n      eventHandlers.forEach(({ name, handler }) => emitter.removeListener(name, handler));\\n  }, []);\\n\\n  return `\\n    <div class=\\\"wrapper\\\">\\n      <h1 class=\\\"title\\\">Logger</h1>\\n      <dl>\\n        ${events\\n          .map(\\n            ({ name, payload }) => `\\n              <div class=\\\"item\\\">\\n                <dt>\\n                  <b>Event name:</b> ${name}\\n                </dt>\\n                <dd>\\n                  <b>Event payload:</b> ${json.plain(payload)}\\n                </dd>\\n              </div>\\n            `\\n          )\\n          .join('')}\\n      </dl>\\n    </div>\\n  `;\\n};\\n\",\"locationsMap\":{\"addons-events--logger\":{\"startLoc\":{\"col\":22,\"line\":75},\"endLoc\":{\"col\":1,\"line\":110},\"startBody\":{\"col\":22,\"line\":75},\"endBody\":{\"col\":1,\"line\":110}}}},},\n  title: 'Addons/Events',\n  decorators: [\n    withEvents({\n      emit,\n      events: [\n        {\n          name: TEST_EVENTS.TEST_EVENT_1,\n          title: 'Test event 1',\n          payload: 0,\n        },\n        {\n          name: TEST_EVENTS.TEST_EVENT_2,\n          title: 'Test event 2',\n          payload: 'Test event 2',\n        },\n        {\n          name: TEST_EVENTS.TEST_EVENT_3,\n          title: 'Test event 3',\n          payload: {\n            string: 'value',\n            number: 123,\n            array: [1, 2, 3],\n            object: {\n              string: 'value',\n              number: 123,\n              array: [1, 2, 3],\n            },\n          },\n        },\n        {\n          name: TEST_EVENTS.TEST_EVENT_4,\n          title: 'Test event 4',\n          payload: [\n            {\n              string: 'value',\n              number: 123,\n              array: [1, 2, 3],\n            },\n            {\n              string: 'value',\n              number: 123,\n              array: [1, 2, 3],\n            },\n            {\n              string: 'value',\n              number: 123,\n              array: [1, 2, 3],\n            },\n          ],\n        },\n      ],\n    }),\n  ],\n};\n\nexport const Logger = () => {\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const eventHandlers = Object.values(TEST_EVENTS).map(name => ({\n      name,\n      handler: payload => {\n        setEvents(prevEvents => [...prevEvents, { name, payload }]);\n      },\n    }));\n    eventHandlers.forEach(({ name, handler }) => emitter.on(name, handler));\n    return () =>\n      eventHandlers.forEach(({ name, handler }) => emitter.removeListener(name, handler));\n  }, []);\n\n  return `\n    <div class=\"wrapper\">\n      <h1 class=\"title\">Logger</h1>\n      <dl>\n        ${events\n          .map(\n            ({ name, payload }) => `\n              <div class=\"item\">\n                <dt>\n                  <b>Event name:</b> ${name}\n                </dt>\n                <dd>\n                  <b>Event payload:</b> ${json.plain(payload)}\n                </dd>\n              </div>\n            `\n          )\n          .join('')}\n      </dl>\n    </div>\n  `;\n};\n",locationsMap:{"addons-events--logger":{startLoc:{col:22,line:83},endLoc:{col:1,line:118},startBody:{col:22,line:83},endBody:{col:1,line:118}}}}},"storySource",{source:"import EventEmitter from 'eventemitter3';\nimport { useEffect, useState } from '@storybook/client-api';\nimport json from 'format-json';\n\nimport withEvents from '@storybook/addon-events';\n\nimport './addon-events.css';\n\nconst TEST_EVENTS = {\n  TEST_EVENT_1: 'test-event-1',\n  TEST_EVENT_2: 'test-event-2',\n  TEST_EVENT_3: 'test-event-3',\n  TEST_EVENT_4: 'test-event-4',\n};\n\nconst emitter = new EventEmitter();\nconst emit = emitter.emit.bind(emitter);\n\nexport default {\n  title: 'Addons/Events',\n  decorators: [\n    withEvents({\n      emit,\n      events: [\n        {\n          name: TEST_EVENTS.TEST_EVENT_1,\n          title: 'Test event 1',\n          payload: 0,\n        },\n        {\n          name: TEST_EVENTS.TEST_EVENT_2,\n          title: 'Test event 2',\n          payload: 'Test event 2',\n        },\n        {\n          name: TEST_EVENTS.TEST_EVENT_3,\n          title: 'Test event 3',\n          payload: {\n            string: 'value',\n            number: 123,\n            array: [1, 2, 3],\n            object: {\n              string: 'value',\n              number: 123,\n              array: [1, 2, 3],\n            },\n          },\n        },\n        {\n          name: TEST_EVENTS.TEST_EVENT_4,\n          title: 'Test event 4',\n          payload: [\n            {\n              string: 'value',\n              number: 123,\n              array: [1, 2, 3],\n            },\n            {\n              string: 'value',\n              number: 123,\n              array: [1, 2, 3],\n            },\n            {\n              string: 'value',\n              number: 123,\n              array: [1, 2, 3],\n            },\n          ],\n        },\n      ],\n    }),\n  ],\n};\n\nexport const Logger = () => {\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const eventHandlers = Object.values(TEST_EVENTS).map(name => ({\n      name,\n      handler: payload => {\n        setEvents(prevEvents => [...prevEvents, { name, payload }]);\n      },\n    }));\n    eventHandlers.forEach(({ name, handler }) => emitter.on(name, handler));\n    return () =>\n      eventHandlers.forEach(({ name, handler }) => emitter.removeListener(name, handler));\n  }, []);\n\n  return `\n    <div class=\"wrapper\">\n      <h1 class=\"title\">Logger</h1>\n      <dl>\n        ${events\n          .map(\n            ({ name, payload }) => `\n              <div class=\"item\">\n                <dt>\n                  <b>Event name:</b> ${name}\n                </dt>\n                <dd>\n                  <b>Event payload:</b> ${json.plain(payload)}\n                </dd>\n              </div>\n            `\n          )\n          .join('')}\n      </dl>\n    </div>\n  `;\n};\n",locationsMap:{"addons-events--logger":{startLoc:{col:22,line:75},endLoc:{col:1,line:110},startBody:{col:22,line:75},endBody:{col:1,line:110}}}}),title:"Addons/Events",decorators:[_storybook_addon_events__WEBPACK_IMPORTED_MODULE_24___default()({emit:emit,events:[{name:TEST_EVENTS.TEST_EVENT_1,title:"Test event 1",payload:0},{name:TEST_EVENTS.TEST_EVENT_2,title:"Test event 2",payload:"Test event 2"},{name:TEST_EVENTS.TEST_EVENT_3,title:"Test event 3",payload:{string:"value",number:123,array:[1,2,3],object:{string:"value",number:123,array:[1,2,3]}}},{name:TEST_EVENTS.TEST_EVENT_4,title:"Test event 4",payload:[{string:"value",number:123,array:[1,2,3]},{string:"value",number:123,array:[1,2,3]},{string:"value",number:123,array:[1,2,3]}]}]})]};var Logger=function Logger(){var _useState2=_slicedToArray(Object(_storybook_client_api__WEBPACK_IMPORTED_MODULE_22__.useState)([]),2),events=_useState2[0],setEvents=_useState2[1];return Object(_storybook_client_api__WEBPACK_IMPORTED_MODULE_22__.useEffect)((function(){var eventHandlers=Object.values(TEST_EVENTS).map((function(name){return{name:name,handler:function handler(payload){setEvents((function(prevEvents){return[].concat(_toConsumableArray(prevEvents),[{name:name,payload:payload}])}))}}}));return eventHandlers.forEach((function(_ref){var name=_ref.name,handler=_ref.handler;return emitter.on(name,handler)})),function(){return eventHandlers.forEach((function(_ref2){var name=_ref2.name,handler=_ref2.handler;return emitter.removeListener(name,handler)}))}}),[]),'\n    <div class="wrapper">\n      <h1 class="title">Logger</h1>\n      <dl>\n        '.concat(events.map((function(_ref3){var name=_ref3.name,payload=_ref3.payload;return'\n              <div class="item">\n                <dt>\n                  <b>Event name:</b> '.concat(name,"\n                </dt>\n                <dd>\n                  <b>Event payload:</b> ").concat(format_json__WEBPACK_IMPORTED_MODULE_23___default.a.plain(payload),"\n                </dd>\n              </div>\n            ")})).join(""),"\n      </dl>\n    </div>\n  ")}},,function(module,exports,__webpack_require__){var api=__webpack_require__(424),content=__webpack_require__(425);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},,function(module,exports,__webpack_require__){(exports=__webpack_require__(426)(!1)).push([module.i,'.wrapper {\n  padding: 20px;\n  font-family:\n    -apple-system, ".SFNSText-Regular", "San Francisco", "Roboto",\n    "Segoe UI", "Helvetica Neue", "Lucida Grande", sans-serif;\n  color: rgb(51, 51, 51);\n}\n\n.title {\n  margin: 0;\n}\n\n.item {\n  list-style: none;\n  margin-bottom: 10px;\n}\n',""]),module.exports=exports},,function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"WithTests",(function(){return WithTests}));__webpack_require__(22);var _storybook_addon_jest__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(162),_addon_jest_testresults_json__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(163);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { withTests as wt } from \'@storybook/addon-jest\';\\nimport results from \'./addon-jest.testresults.json\';\\n\\nexport default {\\n  title: \'Addons/Jest\',\\n  decorators: [wt({ results })],\\n};\\n\\nexport const WithTests = () => \'This story shows test results\';\\nWithTests.parameters = { jest: \'addon-jest\' };\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"addons-jest--with-tests":{"startLoc":{"col":25,"line":9},"endLoc":{"col":62,"line":9},"startBody":{"col":25,"line":9},"endBody":{"col":62,"line":9}}};\n    \nimport { withTests as wt } from \'@storybook/addon-jest\';\nimport results from \'./addon-jest.testresults.json\';\n\nexport default {parameters: {"storySource":{"source":"import { withTests as wt } from \'@storybook/addon-jest\';\\nimport results from \'./addon-jest.testresults.json\';\\n\\nexport default {\\n  title: \'Addons/Jest\',\\n  decorators: [wt({ results })],\\n};\\n\\nexport const WithTests = () => \'This story shows test results\';\\nWithTests.parameters = { jest: \'addon-jest\' };\\n","locationsMap":{"addons-jest--with-tests":{"startLoc":{"col":25,"line":9},"endLoc":{"col":62,"line":9},"startBody":{"col":25,"line":9},"endBody":{"col":62,"line":9}}}},},\n  title: \'Addons/Jest\',\n  decorators: [wt({ results })],\n};\n\nexport const WithTests = () => \'This story shows test results\';\nWithTests.parameters = { jest: \'addon-jest\' };\n',locationsMap:{"addons-jest--with-tests":{startLoc:{col:25,line:17},endLoc:{col:62,line:17},startBody:{col:25,line:17},endBody:{col:62,line:17}}}}},"storySource",{source:"import { withTests as wt } from '@storybook/addon-jest';\nimport results from './addon-jest.testresults.json';\n\nexport default {\n  title: 'Addons/Jest',\n  decorators: [wt({ results })],\n};\n\nexport const WithTests = () => 'This story shows test results';\nWithTests.parameters = { jest: 'addon-jest' };\n",locationsMap:{"addons-jest--with-tests":{startLoc:{col:25,line:9},endLoc:{col:62,line:9},startBody:{col:25,line:9},endBody:{col:62,line:9}}}}),title:"Addons/Jest",decorators:[Object(_storybook_addon_jest__WEBPACK_IMPORTED_MODULE_1__.withTests)({results:_addon_jest_testresults_json__WEBPACK_IMPORTED_MODULE_2__})]};var WithTests=function WithTests(){return"This story shows test results"};WithTests.parameters={jest:"addon-jest"}},,,,function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Simple",(function(){return Simple})),__webpack_require__.d(__webpack_exports__,"DOM",(function(){return DOM})),__webpack_require__.d(__webpack_exports__,"Story3",(function(){return Story3})),__webpack_require__.d(__webpack_exports__,"Story4",(function(){return Story4})),__webpack_require__.d(__webpack_exports__,"Story5",(function(){return Story5}));__webpack_require__(11),__webpack_require__(37),__webpack_require__(13),__webpack_require__(14),__webpack_require__(22);var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(30),global__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(20),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(27);var cachedContainer=global__WEBPACK_IMPORTED_MODULE_6__.document.createElement("p");__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:"\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = \"import { action } from '@storybook/addon-actions';\\nimport { document } from 'global';\\n\\nimport {\\n  array,\\n  boolean,\\n  button,\\n  color,\\n  date,\\n  select,\\n  withKnobs,\\n  text,\\n  number,\\n} from '@storybook/addon-knobs';\\n\\nconst cachedContainer = document.createElement('p');\\n\\nexport default {\\n  title: 'Addons/Knobs',\\n  decorators: [withKnobs],\\n};\\n\\nexport const Simple = () => {\\n  const name = text('Name', 'John Doe');\\n  const age = number('Age', 44);\\n  const content = `I am ${name} and I'm ${age} years old.`;\\n  return `<div>${content}</div>`;\\n};\\n\\nexport const DOM = () => {\\n  const name = text('Name', 'John Doe');\\n  const container = document.createElement('p');\\n  container.textContent = name;\\n  return container;\\n};\\n\\nexport const Story3 = () => {\\n  const name = text('Name', 'John Doe');\\n  const textColor = color('Text color', 'orangered');\\n  cachedContainer.textContent = name;\\n  cachedContainer.style.transition = 'color 0.5s ease-out';\\n  cachedContainer.style.color = textColor;\\n  return cachedContainer;\\n};\\nStory3.story = { name: 'CSS transitions' };\\n\\nexport const Story4 = () => {\\n  const name = text('Name', 'Jane');\\n  const stock = number('Stock', 20, {\\n    range: true,\\n    min: 0,\\n    max: 30,\\n    step: 5,\\n  });\\n  const fruits = {\\n    Apple: 'apples',\\n    Banana: 'bananas',\\n    Cherry: 'cherries',\\n  };\\n  const fruit = select('Fruit', fruits, 'apples');\\n  const price = number('Price', 2.25);\\n  const colour = color('Border', 'deeppink');\\n  const today = date('Today', new Date('Jan 20 2017 GMT+0'));\\n  const items = array('Items', ['Laptop', 'Book', 'Whiskey']);\\n  const nice = boolean('Nice', true);\\n\\n  const stockMessage = stock\\n    ? `I have a stock of ${stock} ${fruit}, costing &dollar;${price} each.`\\n    : `I'm out of ${fruit}${nice ? ', Sorry!' : '.'}`;\\n\\n  const salutation = nice ? 'Nice to meet you!' : 'Leave me alone!';\\n  const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' };\\n\\n  button('Arbitrary action', action('You clicked it!'));\\n\\n  const style = `border: 2px dotted ${colour}; padding: 8px 22px; border-radius: 8px`;\\n\\n  return `<div style=\\\"${style}\\\">\\n        <h1>My name is ${name},</h1>\\n        <h3>today is ${new Date(today).toLocaleDateString('en-US', dateOptions)}</h3>\\n        <p>${stockMessage}</p>\\n        <p>Also, I have:</p>\\n        <ul>${items.map(item => `<li>${item}</li>`).join('')}</ul>\\n        <p>${salutation}</p>\\n      </div>\\n    `;\\n};\\nStory4.story = { name: 'All knobs' };\\n\\nexport const Story5 = () => text('Rendered string', '<img src=x onerror=\\\"alert(\\\\'XSS Attack\\\\')\\\" >');\\nStory5.story = { name: 'XSS safety' };\\n\";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {\"addons-knobs--simple\":{\"startLoc\":{\"col\":22,\"line\":23},\"endLoc\":{\"col\":1,\"line\":28},\"startBody\":{\"col\":22,\"line\":23},\"endBody\":{\"col\":1,\"line\":28}},\"addons-knobs--dom\":{\"startLoc\":{\"col\":19,\"line\":30},\"endLoc\":{\"col\":1,\"line\":35},\"startBody\":{\"col\":19,\"line\":30},\"endBody\":{\"col\":1,\"line\":35}},\"addons-knobs--story-3\":{\"startLoc\":{\"col\":22,\"line\":37},\"endLoc\":{\"col\":1,\"line\":44},\"startBody\":{\"col\":22,\"line\":37},\"endBody\":{\"col\":1,\"line\":44}},\"addons-knobs--story-4\":{\"startLoc\":{\"col\":22,\"line\":47},\"endLoc\":{\"col\":1,\"line\":87},\"startBody\":{\"col\":22,\"line\":47},\"endBody\":{\"col\":1,\"line\":87}},\"addons-knobs--story-5\":{\"startLoc\":{\"col\":22,\"line\":90},\"endLoc\":{\"col\":99,\"line\":90},\"startBody\":{\"col\":22,\"line\":90},\"endBody\":{\"col\":99,\"line\":90}}};\n    \nimport { action } from '@storybook/addon-actions';\nimport { document } from 'global';\n\nimport {\n  array,\n  boolean,\n  button,\n  color,\n  date,\n  select,\n  withKnobs,\n  text,\n  number,\n} from '@storybook/addon-knobs';\n\nconst cachedContainer = document.createElement('p');\n\nexport default {parameters: {\"storySource\":{\"source\":\"import { action } from '@storybook/addon-actions';\\nimport { document } from 'global';\\n\\nimport {\\n  array,\\n  boolean,\\n  button,\\n  color,\\n  date,\\n  select,\\n  withKnobs,\\n  text,\\n  number,\\n} from '@storybook/addon-knobs';\\n\\nconst cachedContainer = document.createElement('p');\\n\\nexport default {\\n  title: 'Addons/Knobs',\\n  decorators: [withKnobs],\\n};\\n\\nexport const Simple = () => {\\n  const name = text('Name', 'John Doe');\\n  const age = number('Age', 44);\\n  const content = `I am ${name} and I'm ${age} years old.`;\\n  return `<div>${content}</div>`;\\n};\\n\\nexport const DOM = () => {\\n  const name = text('Name', 'John Doe');\\n  const container = document.createElement('p');\\n  container.textContent = name;\\n  return container;\\n};\\n\\nexport const Story3 = () => {\\n  const name = text('Name', 'John Doe');\\n  const textColor = color('Text color', 'orangered');\\n  cachedContainer.textContent = name;\\n  cachedContainer.style.transition = 'color 0.5s ease-out';\\n  cachedContainer.style.color = textColor;\\n  return cachedContainer;\\n};\\nStory3.story = { name: 'CSS transitions' };\\n\\nexport const Story4 = () => {\\n  const name = text('Name', 'Jane');\\n  const stock = number('Stock', 20, {\\n    range: true,\\n    min: 0,\\n    max: 30,\\n    step: 5,\\n  });\\n  const fruits = {\\n    Apple: 'apples',\\n    Banana: 'bananas',\\n    Cherry: 'cherries',\\n  };\\n  const fruit = select('Fruit', fruits, 'apples');\\n  const price = number('Price', 2.25);\\n  const colour = color('Border', 'deeppink');\\n  const today = date('Today', new Date('Jan 20 2017 GMT+0'));\\n  const items = array('Items', ['Laptop', 'Book', 'Whiskey']);\\n  const nice = boolean('Nice', true);\\n\\n  const stockMessage = stock\\n    ? `I have a stock of ${stock} ${fruit}, costing &dollar;${price} each.`\\n    : `I'm out of ${fruit}${nice ? ', Sorry!' : '.'}`;\\n\\n  const salutation = nice ? 'Nice to meet you!' : 'Leave me alone!';\\n  const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' };\\n\\n  button('Arbitrary action', action('You clicked it!'));\\n\\n  const style = `border: 2px dotted ${colour}; padding: 8px 22px; border-radius: 8px`;\\n\\n  return `<div style=\\\"${style}\\\">\\n        <h1>My name is ${name},</h1>\\n        <h3>today is ${new Date(today).toLocaleDateString('en-US', dateOptions)}</h3>\\n        <p>${stockMessage}</p>\\n        <p>Also, I have:</p>\\n        <ul>${items.map(item => `<li>${item}</li>`).join('')}</ul>\\n        <p>${salutation}</p>\\n      </div>\\n    `;\\n};\\nStory4.story = { name: 'All knobs' };\\n\\nexport const Story5 = () => text('Rendered string', '<img src=x onerror=\\\"alert(\\\\'XSS Attack\\\\')\\\" >');\\nStory5.story = { name: 'XSS safety' };\\n\",\"locationsMap\":{\"addons-knobs--simple\":{\"startLoc\":{\"col\":22,\"line\":23},\"endLoc\":{\"col\":1,\"line\":28},\"startBody\":{\"col\":22,\"line\":23},\"endBody\":{\"col\":1,\"line\":28}},\"addons-knobs--dom\":{\"startLoc\":{\"col\":19,\"line\":30},\"endLoc\":{\"col\":1,\"line\":35},\"startBody\":{\"col\":19,\"line\":30},\"endBody\":{\"col\":1,\"line\":35}},\"addons-knobs--story-3\":{\"startLoc\":{\"col\":22,\"line\":37},\"endLoc\":{\"col\":1,\"line\":44},\"startBody\":{\"col\":22,\"line\":37},\"endBody\":{\"col\":1,\"line\":44}},\"addons-knobs--story-4\":{\"startLoc\":{\"col\":22,\"line\":47},\"endLoc\":{\"col\":1,\"line\":87},\"startBody\":{\"col\":22,\"line\":47},\"endBody\":{\"col\":1,\"line\":87}},\"addons-knobs--story-5\":{\"startLoc\":{\"col\":22,\"line\":90},\"endLoc\":{\"col\":99,\"line\":90},\"startBody\":{\"col\":22,\"line\":90},\"endBody\":{\"col\":99,\"line\":90}}}},},\n  title: 'Addons/Knobs',\n  decorators: [withKnobs],\n};\n\nexport const Simple = () => {\n  const name = text('Name', 'John Doe');\n  const age = number('Age', 44);\n  const content = `I am ${name} and I'm ${age} years old.`;\n  return `<div>${content}</div>`;\n};;\n\nexport const DOM = () => {\n  const name = text('Name', 'John Doe');\n  const container = document.createElement('p');\n  container.textContent = name;\n  return container;\n};;\n\nexport const Story3 = () => {\n  const name = text('Name', 'John Doe');\n  const textColor = color('Text color', 'orangered');\n  cachedContainer.textContent = name;\n  cachedContainer.style.transition = 'color 0.5s ease-out';\n  cachedContainer.style.color = textColor;\n  return cachedContainer;\n};;\nStory3.story = { name: 'CSS transitions' };\n\nexport const Story4 = () => {\n  const name = text('Name', 'Jane');\n  const stock = number('Stock', 20, {\n    range: true,\n    min: 0,\n    max: 30,\n    step: 5,\n  });\n  const fruits = {\n    Apple: 'apples',\n    Banana: 'bananas',\n    Cherry: 'cherries',\n  };\n  const fruit = select('Fruit', fruits, 'apples');\n  const price = number('Price', 2.25);\n  const colour = color('Border', 'deeppink');\n  const today = date('Today', new Date('Jan 20 2017 GMT+0'));\n  const items = array('Items', ['Laptop', 'Book', 'Whiskey']);\n  const nice = boolean('Nice', true);\n\n  const stockMessage = stock\n    ? `I have a stock of ${stock} ${fruit}, costing &dollar;${price} each.`\n    : `I'm out of ${fruit}${nice ? ', Sorry!' : '.'}`;\n\n  const salutation = nice ? 'Nice to meet you!' : 'Leave me alone!';\n  const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' };\n\n  button('Arbitrary action', action('You clicked it!'));\n\n  const style = `border: 2px dotted ${colour}; padding: 8px 22px; border-radius: 8px`;\n\n  return `<div style=\"${style}\">\n        <h1>My name is ${name},</h1>\n        <h3>today is ${new Date(today).toLocaleDateString('en-US', dateOptions)}</h3>\n        <p>${stockMessage}</p>\n        <p>Also, I have:</p>\n        <ul>${items.map(item => `<li>${item}</li>`).join('')}</ul>\n        <p>${salutation}</p>\n      </div>\n    `;\n};;\nStory4.story = { name: 'All knobs' };\n\nexport const Story5 = () => text('Rendered string', '<img src=x onerror=\"alert(\\'XSS Attack\\')\" >');\nStory5.story = { name: 'XSS safety' };\n",locationsMap:{"addons-knobs--simple":{startLoc:{col:22,line:31},endLoc:{col:1,line:36},startBody:{col:22,line:31},endBody:{col:1,line:36}},"addons-knobs--dom":{startLoc:{col:19,line:38},endLoc:{col:1,line:43},startBody:{col:19,line:38},endBody:{col:1,line:43}},"addons-knobs--story-3":{startLoc:{col:22,line:45},endLoc:{col:1,line:52},startBody:{col:22,line:45},endBody:{col:1,line:52}},"addons-knobs--story-4":{startLoc:{col:22,line:55},endLoc:{col:1,line:95},startBody:{col:22,line:55},endBody:{col:1,line:95}},"addons-knobs--story-5":{startLoc:{col:22,line:98},endLoc:{col:99,line:98},startBody:{col:22,line:98},endBody:{col:99,line:98}}}}},"storySource",{source:"import { action } from '@storybook/addon-actions';\nimport { document } from 'global';\n\nimport {\n  array,\n  boolean,\n  button,\n  color,\n  date,\n  select,\n  withKnobs,\n  text,\n  number,\n} from '@storybook/addon-knobs';\n\nconst cachedContainer = document.createElement('p');\n\nexport default {\n  title: 'Addons/Knobs',\n  decorators: [withKnobs],\n};\n\nexport const Simple = () => {\n  const name = text('Name', 'John Doe');\n  const age = number('Age', 44);\n  const content = `I am ${name} and I'm ${age} years old.`;\n  return `<div>${content}</div>`;\n};\n\nexport const DOM = () => {\n  const name = text('Name', 'John Doe');\n  const container = document.createElement('p');\n  container.textContent = name;\n  return container;\n};\n\nexport const Story3 = () => {\n  const name = text('Name', 'John Doe');\n  const textColor = color('Text color', 'orangered');\n  cachedContainer.textContent = name;\n  cachedContainer.style.transition = 'color 0.5s ease-out';\n  cachedContainer.style.color = textColor;\n  return cachedContainer;\n};\nStory3.story = { name: 'CSS transitions' };\n\nexport const Story4 = () => {\n  const name = text('Name', 'Jane');\n  const stock = number('Stock', 20, {\n    range: true,\n    min: 0,\n    max: 30,\n    step: 5,\n  });\n  const fruits = {\n    Apple: 'apples',\n    Banana: 'bananas',\n    Cherry: 'cherries',\n  };\n  const fruit = select('Fruit', fruits, 'apples');\n  const price = number('Price', 2.25);\n  const colour = color('Border', 'deeppink');\n  const today = date('Today', new Date('Jan 20 2017 GMT+0'));\n  const items = array('Items', ['Laptop', 'Book', 'Whiskey']);\n  const nice = boolean('Nice', true);\n\n  const stockMessage = stock\n    ? `I have a stock of ${stock} ${fruit}, costing &dollar;${price} each.`\n    : `I'm out of ${fruit}${nice ? ', Sorry!' : '.'}`;\n\n  const salutation = nice ? 'Nice to meet you!' : 'Leave me alone!';\n  const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'UTC' };\n\n  button('Arbitrary action', action('You clicked it!'));\n\n  const style = `border: 2px dotted ${colour}; padding: 8px 22px; border-radius: 8px`;\n\n  return `<div style=\"${style}\">\n        <h1>My name is ${name},</h1>\n        <h3>today is ${new Date(today).toLocaleDateString('en-US', dateOptions)}</h3>\n        <p>${stockMessage}</p>\n        <p>Also, I have:</p>\n        <ul>${items.map(item => `<li>${item}</li>`).join('')}</ul>\n        <p>${salutation}</p>\n      </div>\n    `;\n};\nStory4.story = { name: 'All knobs' };\n\nexport const Story5 = () => text('Rendered string', '<img src=x onerror=\"alert(\\'XSS Attack\\')\" >');\nStory5.story = { name: 'XSS safety' };\n",locationsMap:{"addons-knobs--simple":{startLoc:{col:22,line:23},endLoc:{col:1,line:28},startBody:{col:22,line:23},endBody:{col:1,line:28}},"addons-knobs--dom":{startLoc:{col:19,line:30},endLoc:{col:1,line:35},startBody:{col:19,line:30},endBody:{col:1,line:35}},"addons-knobs--story-3":{startLoc:{col:22,line:37},endLoc:{col:1,line:44},startBody:{col:22,line:37},endBody:{col:1,line:44}},"addons-knobs--story-4":{startLoc:{col:22,line:47},endLoc:{col:1,line:87},startBody:{col:22,line:47},endBody:{col:1,line:87}},"addons-knobs--story-5":{startLoc:{col:22,line:90},endLoc:{col:99,line:90},startBody:{col:22,line:90},endBody:{col:99,line:90}}}}),title:"Addons/Knobs",decorators:[_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.withKnobs]};var Simple=function Simple(){var name=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.text)("Name","John Doe"),age=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.number)("Age",44),content="I am ".concat(name," and I'm ").concat(age," years old.");return"<div>".concat(content,"</div>")},DOM=function DOM(){var name=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.text)("Name","John Doe"),container=global__WEBPACK_IMPORTED_MODULE_6__.document.createElement("p");return container.textContent=name,container},Story3=function Story3(){var name=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.text)("Name","John Doe"),textColor=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.color)("Text color","orangered");return cachedContainer.textContent=name,cachedContainer.style.transition="color 0.5s ease-out",cachedContainer.style.color=textColor,cachedContainer};Story3.story={name:"CSS transitions"};var Story4=function Story4(){var name=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.text)("Name","Jane"),stock=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.number)("Stock",20,{range:!0,min:0,max:30,step:5}),fruit=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.select)("Fruit",{Apple:"apples",Banana:"bananas",Cherry:"cherries"},"apples"),price=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.number)("Price",2.25),colour=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.color)("Border","deeppink"),today=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.date)("Today",new Date("Jan 20 2017 GMT+0")),items=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.array)("Items",["Laptop","Book","Whiskey"]),nice=Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.boolean)("Nice",!0),stockMessage=stock?"I have a stock of ".concat(stock," ").concat(fruit,", costing &dollar;").concat(price," each."):"I'm out of ".concat(fruit).concat(nice?", Sorry!":"."),salutation=nice?"Nice to meet you!":"Leave me alone!";Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.button)("Arbitrary action",Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_5__.action)("You clicked it!"));var style="border: 2px dotted ".concat(colour,"; padding: 8px 22px; border-radius: 8px");return'<div style="'.concat(style,'">\n        <h1>My name is ').concat(name,",</h1>\n        <h3>today is ").concat(new Date(today).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric",timeZone:"UTC"}),"</h3>\n        <p>").concat(stockMessage,"</p>\n        <p>Also, I have:</p>\n        <ul>").concat(items.map((function(item){return"<li>".concat(item,"</li>")})).join(""),"</ul>\n        <p>").concat(salutation,"</p>\n      </div>\n    ")};Story4.story={name:"All knobs"};var Story5=function Story5(){return Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_7__.text)("Rendered string","<img src=x onerror=\"alert('XSS Attack')\" >")};Story5.story={name:"XSS safety"}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Alertprimary",(function(){return Alertprimary})),__webpack_require__.d(__webpack_exports__,"Alertsecondary",(function(){return Alertsecondary})),__webpack_require__.d(__webpack_exports__,"Alertsuccess",(function(){return Alertsuccess})),__webpack_require__.d(__webpack_exports__,"Alertdanger",(function(){return Alertdanger})),__webpack_require__.d(__webpack_exports__,"Alertwarning",(function(){return Alertwarning})),__webpack_require__.d(__webpack_exports__,"Alertinfo",(function(){return Alertinfo})),__webpack_require__.d(__webpack_exports__,"Alertlight",(function(){return Alertlight})),__webpack_require__.d(__webpack_exports__,"Alertdark",(function(){return Alertdark})),__webpack_require__.d(__webpack_exports__,"Alertlinkprimary",(function(){return Alertlinkprimary})),__webpack_require__.d(__webpack_exports__,"Alertlinksecondary",(function(){return Alertlinksecondary})),__webpack_require__.d(__webpack_exports__,"Alertlinksuccess",(function(){return Alertlinksuccess})),__webpack_require__.d(__webpack_exports__,"Alertlinkdanger",(function(){return Alertlinkdanger})),__webpack_require__.d(__webpack_exports__,"Alertlinkwarning",(function(){return Alertlinkwarning})),__webpack_require__.d(__webpack_exports__,"Alertlinkinfo",(function(){return Alertlinkinfo})),__webpack_require__.d(__webpack_exports__,"Alertlinklight",(function(){return Alertlinklight})),__webpack_require__.d(__webpack_exports__,"Alertlinkdark",(function(){return Alertlinkdark})),__webpack_require__.d(__webpack_exports__,"Dismisswarning",(function(){return Dismisswarning}));__webpack_require__(22),__webpack_require__(20),__webpack_require__(30),__webpack_require__(24);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { document } from \'global\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { useEffect } from \'@storybook/client-api\';\\n\\nexport default {\\n  title: \'Components/Alerts\',\\n};\\n\\n// export const Heading = () => \'<h1>Hello World</h1>\';\\n// export const Headings = () =>\\n//   \'<h1>Hello World</h1><h2>Hello World</h2><h3>Hello World</h3><h4>Hello World</h4>\';\\n\\nexport const Alertprimary = () => \'<div class=\\"alert alert-primary\\" role=\\"alert\\">A simple primary alert—check it out!</div>\';\\nexport const Alertsecondary = () => \'<div class=\\"alert alert-secondary\\" role=\\"alert\\">A simple secondary alert—check it out!</div>\';\\nexport const Alertsuccess = () => \'<div class=\\"alert alert-success\\" role=\\"alert\\">A simple success alert—check it out!</div>\';\\nexport const Alertdanger = () => \'<div class=\\"alert alert-danger\\" role=\\"alert\\">A simple danger alert—check it out!</div>\';\\nexport const Alertwarning = () => \'<div class=\\"alert alert-warning\\" role=\\"alert\\">A simple warning alert—check it out!</div>\';\\nexport const Alertinfo = () => \'<div class=\\"alert alert-info\\" role=\\"alert\\">A simple info alert—check it out!</div>\';\\nexport const Alertlight = () => \'<div class=\\"alert alert-light\\" role=\\"alert\\">A simple light alert—check it out!</div>\';\\nexport const Alertdark = () => \'<div class=\\"alert alert-dark\\" role=\\"alert\\">A simple dark alert—check it out!</div>\';\\n\\n\\n//Link color\\n\\nexport const Alertlinkprimary = () => \'<div class=\\"alert alert-primary\\" role=\\"alert\\">A simple primary alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinksecondary = () => \'<div class=\\"alert alert-secondary\\" role=\\"alert\\">A simple secondary alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinksuccess = () => \'<div class=\\"alert alert-success\\" role=\\"alert\\">A simple success alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinkdanger = () => \'<div class=\\"alert alert-danger\\" role=\\"alert\\">A simple danger alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinkwarning = () => \'<div class=\\"alert alert-warning\\" role=\\"alert\\">A simple warning alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinkinfo = () => \'<div class=\\"alert alert-info\\" role=\\"alert\\">A simple info alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinklight = () => \'<div class=\\"alert alert-light\\" role=\\"alert\\">A simple light alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinkdark = () => \'<div class=\\"alert alert-dark\\" role=\\"alert\\">A simple dark alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\n\\n\\n//Dismissing Alert\\nexport const Dismisswarning = () => \'<div class=\\"alert alert-warning alert-dismissible fade show\\" role=\\"alert\\"><strong>Holy guacamole!</strong> You should check in on some of those fields below.<button type=\\"button\\" class=\\"close\\" data-dismiss=\\"alert\\" aria-label=\\"Close\\"><span aria-hidden=\\"true\\">&times;</span></button></div>\';\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"components-alerts--alertprimary":{"startLoc":{"col":28,"line":13},"endLoc":{"col":124,"line":13},"startBody":{"col":28,"line":13},"endBody":{"col":124,"line":13}},"components-alerts--alertsecondary":{"startLoc":{"col":30,"line":14},"endLoc":{"col":130,"line":14},"startBody":{"col":30,"line":14},"endBody":{"col":130,"line":14}},"components-alerts--alertsuccess":{"startLoc":{"col":28,"line":15},"endLoc":{"col":124,"line":15},"startBody":{"col":28,"line":15},"endBody":{"col":124,"line":15}},"components-alerts--alertdanger":{"startLoc":{"col":27,"line":16},"endLoc":{"col":121,"line":16},"startBody":{"col":27,"line":16},"endBody":{"col":121,"line":16}},"components-alerts--alertwarning":{"startLoc":{"col":28,"line":17},"endLoc":{"col":124,"line":17},"startBody":{"col":28,"line":17},"endBody":{"col":124,"line":17}},"components-alerts--alertinfo":{"startLoc":{"col":25,"line":18},"endLoc":{"col":115,"line":18},"startBody":{"col":25,"line":18},"endBody":{"col":115,"line":18}},"components-alerts--alertlight":{"startLoc":{"col":26,"line":19},"endLoc":{"col":118,"line":19},"startBody":{"col":26,"line":19},"endBody":{"col":118,"line":19}},"components-alerts--alertdark":{"startLoc":{"col":25,"line":20},"endLoc":{"col":115,"line":20},"startBody":{"col":25,"line":20},"endBody":{"col":115,"line":20}},"components-alerts--alertlinkprimary":{"startLoc":{"col":32,"line":25},"endLoc":{"col":200,"line":25},"startBody":{"col":32,"line":25},"endBody":{"col":200,"line":25}},"components-alerts--alertlinksecondary":{"startLoc":{"col":34,"line":26},"endLoc":{"col":206,"line":26},"startBody":{"col":34,"line":26},"endBody":{"col":206,"line":26}},"components-alerts--alertlinksuccess":{"startLoc":{"col":32,"line":27},"endLoc":{"col":200,"line":27},"startBody":{"col":32,"line":27},"endBody":{"col":200,"line":27}},"components-alerts--alertlinkdanger":{"startLoc":{"col":31,"line":28},"endLoc":{"col":197,"line":28},"startBody":{"col":31,"line":28},"endBody":{"col":197,"line":28}},"components-alerts--alertlinkwarning":{"startLoc":{"col":32,"line":29},"endLoc":{"col":200,"line":29},"startBody":{"col":32,"line":29},"endBody":{"col":200,"line":29}},"components-alerts--alertlinkinfo":{"startLoc":{"col":29,"line":30},"endLoc":{"col":191,"line":30},"startBody":{"col":29,"line":30},"endBody":{"col":191,"line":30}},"components-alerts--alertlinklight":{"startLoc":{"col":30,"line":31},"endLoc":{"col":194,"line":31},"startBody":{"col":30,"line":31},"endBody":{"col":194,"line":31}},"components-alerts--alertlinkdark":{"startLoc":{"col":29,"line":32},"endLoc":{"col":191,"line":32},"startBody":{"col":29,"line":32},"endBody":{"col":191,"line":32}},"components-alerts--dismisswarning":{"startLoc":{"col":30,"line":36},"endLoc":{"col":325,"line":36},"startBody":{"col":30,"line":36},"endBody":{"col":325,"line":36}}};\n    \nimport { document } from \'global\';\nimport { action } from \'@storybook/addon-actions\';\nimport { useEffect } from \'@storybook/client-api\';\n\nexport default {parameters: {"storySource":{"source":"import { document } from \'global\';\\nimport { action } from \'@storybook/addon-actions\';\\nimport { useEffect } from \'@storybook/client-api\';\\n\\nexport default {\\n  title: \'Components/Alerts\',\\n};\\n\\n// export const Heading = () => \'<h1>Hello World</h1>\';\\n// export const Headings = () =>\\n//   \'<h1>Hello World</h1><h2>Hello World</h2><h3>Hello World</h3><h4>Hello World</h4>\';\\n\\nexport const Alertprimary = () => \'<div class=\\"alert alert-primary\\" role=\\"alert\\">A simple primary alert—check it out!</div>\';\\nexport const Alertsecondary = () => \'<div class=\\"alert alert-secondary\\" role=\\"alert\\">A simple secondary alert—check it out!</div>\';\\nexport const Alertsuccess = () => \'<div class=\\"alert alert-success\\" role=\\"alert\\">A simple success alert—check it out!</div>\';\\nexport const Alertdanger = () => \'<div class=\\"alert alert-danger\\" role=\\"alert\\">A simple danger alert—check it out!</div>\';\\nexport const Alertwarning = () => \'<div class=\\"alert alert-warning\\" role=\\"alert\\">A simple warning alert—check it out!</div>\';\\nexport const Alertinfo = () => \'<div class=\\"alert alert-info\\" role=\\"alert\\">A simple info alert—check it out!</div>\';\\nexport const Alertlight = () => \'<div class=\\"alert alert-light\\" role=\\"alert\\">A simple light alert—check it out!</div>\';\\nexport const Alertdark = () => \'<div class=\\"alert alert-dark\\" role=\\"alert\\">A simple dark alert—check it out!</div>\';\\n\\n\\n//Link color\\n\\nexport const Alertlinkprimary = () => \'<div class=\\"alert alert-primary\\" role=\\"alert\\">A simple primary alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinksecondary = () => \'<div class=\\"alert alert-secondary\\" role=\\"alert\\">A simple secondary alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinksuccess = () => \'<div class=\\"alert alert-success\\" role=\\"alert\\">A simple success alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinkdanger = () => \'<div class=\\"alert alert-danger\\" role=\\"alert\\">A simple danger alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinkwarning = () => \'<div class=\\"alert alert-warning\\" role=\\"alert\\">A simple warning alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinkinfo = () => \'<div class=\\"alert alert-info\\" role=\\"alert\\">A simple info alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinklight = () => \'<div class=\\"alert alert-light\\" role=\\"alert\\">A simple light alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\nexport const Alertlinkdark = () => \'<div class=\\"alert alert-dark\\" role=\\"alert\\">A simple dark alert with <a href=\\"#\\" class=\\"alert-link\\">an example link</a>. Give it a click if you like.</div>\';\\n\\n\\n//Dismissing Alert\\nexport const Dismisswarning = () => \'<div class=\\"alert alert-warning alert-dismissible fade show\\" role=\\"alert\\"><strong>Holy guacamole!</strong> You should check in on some of those fields below.<button type=\\"button\\" class=\\"close\\" data-dismiss=\\"alert\\" aria-label=\\"Close\\"><span aria-hidden=\\"true\\">&times;</span></button></div>\';\\n","locationsMap":{"components-alerts--alertprimary":{"startLoc":{"col":28,"line":13},"endLoc":{"col":124,"line":13},"startBody":{"col":28,"line":13},"endBody":{"col":124,"line":13}},"components-alerts--alertsecondary":{"startLoc":{"col":30,"line":14},"endLoc":{"col":130,"line":14},"startBody":{"col":30,"line":14},"endBody":{"col":130,"line":14}},"components-alerts--alertsuccess":{"startLoc":{"col":28,"line":15},"endLoc":{"col":124,"line":15},"startBody":{"col":28,"line":15},"endBody":{"col":124,"line":15}},"components-alerts--alertdanger":{"startLoc":{"col":27,"line":16},"endLoc":{"col":121,"line":16},"startBody":{"col":27,"line":16},"endBody":{"col":121,"line":16}},"components-alerts--alertwarning":{"startLoc":{"col":28,"line":17},"endLoc":{"col":124,"line":17},"startBody":{"col":28,"line":17},"endBody":{"col":124,"line":17}},"components-alerts--alertinfo":{"startLoc":{"col":25,"line":18},"endLoc":{"col":115,"line":18},"startBody":{"col":25,"line":18},"endBody":{"col":115,"line":18}},"components-alerts--alertlight":{"startLoc":{"col":26,"line":19},"endLoc":{"col":118,"line":19},"startBody":{"col":26,"line":19},"endBody":{"col":118,"line":19}},"components-alerts--alertdark":{"startLoc":{"col":25,"line":20},"endLoc":{"col":115,"line":20},"startBody":{"col":25,"line":20},"endBody":{"col":115,"line":20}},"components-alerts--alertlinkprimary":{"startLoc":{"col":32,"line":25},"endLoc":{"col":200,"line":25},"startBody":{"col":32,"line":25},"endBody":{"col":200,"line":25}},"components-alerts--alertlinksecondary":{"startLoc":{"col":34,"line":26},"endLoc":{"col":206,"line":26},"startBody":{"col":34,"line":26},"endBody":{"col":206,"line":26}},"components-alerts--alertlinksuccess":{"startLoc":{"col":32,"line":27},"endLoc":{"col":200,"line":27},"startBody":{"col":32,"line":27},"endBody":{"col":200,"line":27}},"components-alerts--alertlinkdanger":{"startLoc":{"col":31,"line":28},"endLoc":{"col":197,"line":28},"startBody":{"col":31,"line":28},"endBody":{"col":197,"line":28}},"components-alerts--alertlinkwarning":{"startLoc":{"col":32,"line":29},"endLoc":{"col":200,"line":29},"startBody":{"col":32,"line":29},"endBody":{"col":200,"line":29}},"components-alerts--alertlinkinfo":{"startLoc":{"col":29,"line":30},"endLoc":{"col":191,"line":30},"startBody":{"col":29,"line":30},"endBody":{"col":191,"line":30}},"components-alerts--alertlinklight":{"startLoc":{"col":30,"line":31},"endLoc":{"col":194,"line":31},"startBody":{"col":30,"line":31},"endBody":{"col":194,"line":31}},"components-alerts--alertlinkdark":{"startLoc":{"col":29,"line":32},"endLoc":{"col":191,"line":32},"startBody":{"col":29,"line":32},"endBody":{"col":191,"line":32}},"components-alerts--dismisswarning":{"startLoc":{"col":30,"line":36},"endLoc":{"col":325,"line":36},"startBody":{"col":30,"line":36},"endBody":{"col":325,"line":36}}}},},\n  title: \'Components/Alerts\',\n};\n\n// export const Heading = () => \'<h1>Hello World</h1>\';\n// export const Headings = () =>\n//   \'<h1>Hello World</h1><h2>Hello World</h2><h3>Hello World</h3><h4>Hello World</h4>\';\n\nexport const Alertprimary = () => \'<div class="alert alert-primary" role="alert">A simple primary alert—check it out!</div>\';;\nexport const Alertsecondary = () => \'<div class="alert alert-secondary" role="alert">A simple secondary alert—check it out!</div>\';;\nexport const Alertsuccess = () => \'<div class="alert alert-success" role="alert">A simple success alert—check it out!</div>\';;\nexport const Alertdanger = () => \'<div class="alert alert-danger" role="alert">A simple danger alert—check it out!</div>\';;\nexport const Alertwarning = () => \'<div class="alert alert-warning" role="alert">A simple warning alert—check it out!</div>\';;\nexport const Alertinfo = () => \'<div class="alert alert-info" role="alert">A simple info alert—check it out!</div>\';;\nexport const Alertlight = () => \'<div class="alert alert-light" role="alert">A simple light alert—check it out!</div>\';;\nexport const Alertdark = () => \'<div class="alert alert-dark" role="alert">A simple dark alert—check it out!</div>\';;\n\n\n//Link color\n\nexport const Alertlinkprimary = () => \'<div class="alert alert-primary" role="alert">A simple primary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';;\nexport const Alertlinksecondary = () => \'<div class="alert alert-secondary" role="alert">A simple secondary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';;\nexport const Alertlinksuccess = () => \'<div class="alert alert-success" role="alert">A simple success alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';;\nexport const Alertlinkdanger = () => \'<div class="alert alert-danger" role="alert">A simple danger alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';;\nexport const Alertlinkwarning = () => \'<div class="alert alert-warning" role="alert">A simple warning alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';;\nexport const Alertlinkinfo = () => \'<div class="alert alert-info" role="alert">A simple info alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';;\nexport const Alertlinklight = () => \'<div class="alert alert-light" role="alert">A simple light alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';;\nexport const Alertlinkdark = () => \'<div class="alert alert-dark" role="alert">A simple dark alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';;\n\n\n//Dismissing Alert\nexport const Dismisswarning = () => \'<div class="alert alert-warning alert-dismissible fade show" role="alert"><strong>Holy guacamole!</strong> You should check in on some of those fields below.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>\';\n',locationsMap:{"components-alerts--alertprimary":{startLoc:{col:28,line:21},endLoc:{col:124,line:21},startBody:{col:28,line:21},endBody:{col:124,line:21}},"components-alerts--alertsecondary":{startLoc:{col:30,line:22},endLoc:{col:130,line:22},startBody:{col:30,line:22},endBody:{col:130,line:22}},"components-alerts--alertsuccess":{startLoc:{col:28,line:23},endLoc:{col:124,line:23},startBody:{col:28,line:23},endBody:{col:124,line:23}},"components-alerts--alertdanger":{startLoc:{col:27,line:24},endLoc:{col:121,line:24},startBody:{col:27,line:24},endBody:{col:121,line:24}},"components-alerts--alertwarning":{startLoc:{col:28,line:25},endLoc:{col:124,line:25},startBody:{col:28,line:25},endBody:{col:124,line:25}},"components-alerts--alertinfo":{startLoc:{col:25,line:26},endLoc:{col:115,line:26},startBody:{col:25,line:26},endBody:{col:115,line:26}},"components-alerts--alertlight":{startLoc:{col:26,line:27},endLoc:{col:118,line:27},startBody:{col:26,line:27},endBody:{col:118,line:27}},"components-alerts--alertdark":{startLoc:{col:25,line:28},endLoc:{col:115,line:28},startBody:{col:25,line:28},endBody:{col:115,line:28}},"components-alerts--alertlinkprimary":{startLoc:{col:32,line:33},endLoc:{col:200,line:33},startBody:{col:32,line:33},endBody:{col:200,line:33}},"components-alerts--alertlinksecondary":{startLoc:{col:34,line:34},endLoc:{col:206,line:34},startBody:{col:34,line:34},endBody:{col:206,line:34}},"components-alerts--alertlinksuccess":{startLoc:{col:32,line:35},endLoc:{col:200,line:35},startBody:{col:32,line:35},endBody:{col:200,line:35}},"components-alerts--alertlinkdanger":{startLoc:{col:31,line:36},endLoc:{col:197,line:36},startBody:{col:31,line:36},endBody:{col:197,line:36}},"components-alerts--alertlinkwarning":{startLoc:{col:32,line:37},endLoc:{col:200,line:37},startBody:{col:32,line:37},endBody:{col:200,line:37}},"components-alerts--alertlinkinfo":{startLoc:{col:29,line:38},endLoc:{col:191,line:38},startBody:{col:29,line:38},endBody:{col:191,line:38}},"components-alerts--alertlinklight":{startLoc:{col:30,line:39},endLoc:{col:194,line:39},startBody:{col:30,line:39},endBody:{col:194,line:39}},"components-alerts--alertlinkdark":{startLoc:{col:29,line:40},endLoc:{col:191,line:40},startBody:{col:29,line:40},endBody:{col:191,line:40}},"components-alerts--dismisswarning":{startLoc:{col:30,line:44},endLoc:{col:325,line:44},startBody:{col:30,line:44},endBody:{col:325,line:44}}}}},"storySource",{source:'import { document } from \'global\';\nimport { action } from \'@storybook/addon-actions\';\nimport { useEffect } from \'@storybook/client-api\';\n\nexport default {\n  title: \'Components/Alerts\',\n};\n\n// export const Heading = () => \'<h1>Hello World</h1>\';\n// export const Headings = () =>\n//   \'<h1>Hello World</h1><h2>Hello World</h2><h3>Hello World</h3><h4>Hello World</h4>\';\n\nexport const Alertprimary = () => \'<div class="alert alert-primary" role="alert">A simple primary alert—check it out!</div>\';\nexport const Alertsecondary = () => \'<div class="alert alert-secondary" role="alert">A simple secondary alert—check it out!</div>\';\nexport const Alertsuccess = () => \'<div class="alert alert-success" role="alert">A simple success alert—check it out!</div>\';\nexport const Alertdanger = () => \'<div class="alert alert-danger" role="alert">A simple danger alert—check it out!</div>\';\nexport const Alertwarning = () => \'<div class="alert alert-warning" role="alert">A simple warning alert—check it out!</div>\';\nexport const Alertinfo = () => \'<div class="alert alert-info" role="alert">A simple info alert—check it out!</div>\';\nexport const Alertlight = () => \'<div class="alert alert-light" role="alert">A simple light alert—check it out!</div>\';\nexport const Alertdark = () => \'<div class="alert alert-dark" role="alert">A simple dark alert—check it out!</div>\';\n\n\n//Link color\n\nexport const Alertlinkprimary = () => \'<div class="alert alert-primary" role="alert">A simple primary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';\nexport const Alertlinksecondary = () => \'<div class="alert alert-secondary" role="alert">A simple secondary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';\nexport const Alertlinksuccess = () => \'<div class="alert alert-success" role="alert">A simple success alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';\nexport const Alertlinkdanger = () => \'<div class="alert alert-danger" role="alert">A simple danger alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';\nexport const Alertlinkwarning = () => \'<div class="alert alert-warning" role="alert">A simple warning alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';\nexport const Alertlinkinfo = () => \'<div class="alert alert-info" role="alert">A simple info alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';\nexport const Alertlinklight = () => \'<div class="alert alert-light" role="alert">A simple light alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';\nexport const Alertlinkdark = () => \'<div class="alert alert-dark" role="alert">A simple dark alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>\';\n\n\n//Dismissing Alert\nexport const Dismisswarning = () => \'<div class="alert alert-warning alert-dismissible fade show" role="alert"><strong>Holy guacamole!</strong> You should check in on some of those fields below.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>\';\n',locationsMap:{"components-alerts--alertprimary":{startLoc:{col:28,line:13},endLoc:{col:124,line:13},startBody:{col:28,line:13},endBody:{col:124,line:13}},"components-alerts--alertsecondary":{startLoc:{col:30,line:14},endLoc:{col:130,line:14},startBody:{col:30,line:14},endBody:{col:130,line:14}},"components-alerts--alertsuccess":{startLoc:{col:28,line:15},endLoc:{col:124,line:15},startBody:{col:28,line:15},endBody:{col:124,line:15}},"components-alerts--alertdanger":{startLoc:{col:27,line:16},endLoc:{col:121,line:16},startBody:{col:27,line:16},endBody:{col:121,line:16}},"components-alerts--alertwarning":{startLoc:{col:28,line:17},endLoc:{col:124,line:17},startBody:{col:28,line:17},endBody:{col:124,line:17}},"components-alerts--alertinfo":{startLoc:{col:25,line:18},endLoc:{col:115,line:18},startBody:{col:25,line:18},endBody:{col:115,line:18}},"components-alerts--alertlight":{startLoc:{col:26,line:19},endLoc:{col:118,line:19},startBody:{col:26,line:19},endBody:{col:118,line:19}},"components-alerts--alertdark":{startLoc:{col:25,line:20},endLoc:{col:115,line:20},startBody:{col:25,line:20},endBody:{col:115,line:20}},"components-alerts--alertlinkprimary":{startLoc:{col:32,line:25},endLoc:{col:200,line:25},startBody:{col:32,line:25},endBody:{col:200,line:25}},"components-alerts--alertlinksecondary":{startLoc:{col:34,line:26},endLoc:{col:206,line:26},startBody:{col:34,line:26},endBody:{col:206,line:26}},"components-alerts--alertlinksuccess":{startLoc:{col:32,line:27},endLoc:{col:200,line:27},startBody:{col:32,line:27},endBody:{col:200,line:27}},"components-alerts--alertlinkdanger":{startLoc:{col:31,line:28},endLoc:{col:197,line:28},startBody:{col:31,line:28},endBody:{col:197,line:28}},"components-alerts--alertlinkwarning":{startLoc:{col:32,line:29},endLoc:{col:200,line:29},startBody:{col:32,line:29},endBody:{col:200,line:29}},"components-alerts--alertlinkinfo":{startLoc:{col:29,line:30},endLoc:{col:191,line:30},startBody:{col:29,line:30},endBody:{col:191,line:30}},"components-alerts--alertlinklight":{startLoc:{col:30,line:31},endLoc:{col:194,line:31},startBody:{col:30,line:31},endBody:{col:194,line:31}},"components-alerts--alertlinkdark":{startLoc:{col:29,line:32},endLoc:{col:191,line:32},startBody:{col:29,line:32},endBody:{col:191,line:32}},"components-alerts--dismisswarning":{startLoc:{col:30,line:36},endLoc:{col:325,line:36},startBody:{col:30,line:36},endBody:{col:325,line:36}}}}),title:"Components/Alerts"};var Alertprimary=function Alertprimary(){return'<div class="alert alert-primary" role="alert">A simple primary alert—check it out!</div>'},Alertsecondary=function Alertsecondary(){return'<div class="alert alert-secondary" role="alert">A simple secondary alert—check it out!</div>'},Alertsuccess=function Alertsuccess(){return'<div class="alert alert-success" role="alert">A simple success alert—check it out!</div>'},Alertdanger=function Alertdanger(){return'<div class="alert alert-danger" role="alert">A simple danger alert—check it out!</div>'},Alertwarning=function Alertwarning(){return'<div class="alert alert-warning" role="alert">A simple warning alert—check it out!</div>'},Alertinfo=function Alertinfo(){return'<div class="alert alert-info" role="alert">A simple info alert—check it out!</div>'},Alertlight=function Alertlight(){return'<div class="alert alert-light" role="alert">A simple light alert—check it out!</div>'},Alertdark=function Alertdark(){return'<div class="alert alert-dark" role="alert">A simple dark alert—check it out!</div>'},Alertlinkprimary=function Alertlinkprimary(){return'<div class="alert alert-primary" role="alert">A simple primary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>'},Alertlinksecondary=function Alertlinksecondary(){return'<div class="alert alert-secondary" role="alert">A simple secondary alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>'},Alertlinksuccess=function Alertlinksuccess(){return'<div class="alert alert-success" role="alert">A simple success alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>'},Alertlinkdanger=function Alertlinkdanger(){return'<div class="alert alert-danger" role="alert">A simple danger alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>'},Alertlinkwarning=function Alertlinkwarning(){return'<div class="alert alert-warning" role="alert">A simple warning alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>'},Alertlinkinfo=function Alertlinkinfo(){return'<div class="alert alert-info" role="alert">A simple info alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>'},Alertlinklight=function Alertlinklight(){return'<div class="alert alert-light" role="alert">A simple light alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>'},Alertlinkdark=function Alertlinkdark(){return'<div class="alert alert-dark" role="alert">A simple dark alert with <a href="#" class="alert-link">an example link</a>. Give it a click if you like.</div>'},Dismisswarning=function Dismisswarning(){return'<div class="alert alert-warning alert-dismissible fade show" role="alert"><strong>Holy guacamole!</strong> You should check in on some of those fields below.<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>'}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(20),__webpack_require__(30),__webpack_require__(24);__webpack_exports__.default={title:"Components/Buttons"}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Button",(function(){return Button})),__webpack_require__.d(__webpack_exports__,"SimpleStory",(function(){return SimpleStory}));__webpack_require__(22);var _parameters,_button_html__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(105),_button_html__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_button_html__WEBPACK_IMPORTED_MODULE_1__);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var componentSubtitle="import button from '".concat("./button.html","/lib/elements/buttons';");__webpack_exports__.default={title:"Addons/Source loader",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import button from \'./button.html\';\\n\\nconst packageName = \'./button.html\';\\nconst componentSubtitle = `import button from \'${packageName}/lib/elements/buttons\';`;\\n\\nexport default {\\n  title: \'Addons/Source loader\',\\n  parameters: {\\n    componentSubtitle,\\n  },\\n};\\n\\nexport const Button = () => button;\\nButton.story = {\\n  parameters: {\\n    storySource: {\\n      source: button,\\n    },\\n  },\\n};\\n\\nexport const SimpleStory = () =>\\n  `<p>\\n      <strong>\\n        This is a fragment of HTML\\n      </strong>\\n    </p>`;\\nSimpleStory.story = {\\n  name: \'Very simple story\',\\n};\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"addons-source-loader--button":{"startLoc":{"col":22,"line":13},"endLoc":{"col":34,"line":13},"startBody":{"col":22,"line":13},"endBody":{"col":34,"line":13}},"addons-source-loader--simple-story":{"startLoc":{"col":27,"line":22},"endLoc":{"col":9,"line":27},"startBody":{"col":27,"line":22},"endBody":{"col":9,"line":27}}};\n    \nimport button from \'./button.html\';\n\nconst packageName = \'./button.html\';\nconst componentSubtitle = `import button from \'${packageName}/lib/elements/buttons\';`;\n\nexport default {\n  title: \'Addons/Source loader\',\n  parameters: {"storySource":{"source":"import button from \'./button.html\';\\n\\nconst packageName = \'./button.html\';\\nconst componentSubtitle = `import button from \'${packageName}/lib/elements/buttons\';`;\\n\\nexport default {\\n  title: \'Addons/Source loader\',\\n  parameters: {\\n    componentSubtitle,\\n  },\\n};\\n\\nexport const Button = () => button;\\nButton.story = {\\n  parameters: {\\n    storySource: {\\n      source: button,\\n    },\\n  },\\n};\\n\\nexport const SimpleStory = () =>\\n  `<p>\\n      <strong>\\n        This is a fragment of HTML\\n      </strong>\\n    </p>`;\\nSimpleStory.story = {\\n  name: \'Very simple story\',\\n};\\n","locationsMap":{"addons-source-loader--button":{"startLoc":{"col":22,"line":13},"endLoc":{"col":34,"line":13},"startBody":{"col":22,"line":13},"endBody":{"col":34,"line":13}},"addons-source-loader--simple-story":{"startLoc":{"col":27,"line":22},"endLoc":{"col":9,"line":27},"startBody":{"col":27,"line":22},"endBody":{"col":9,"line":27}}}},\n    componentSubtitle,\n  },\n};\n\nexport const Button = () => button;;\nButton.story = {\n  parameters: {\n    storySource: {\n      source: button,\n    },\n  },\n};\n\nexport const SimpleStory = () =>\n  `<p>\n      <strong>\n        This is a fragment of HTML\n      </strong>\n    </p>`;\nSimpleStory.story = {\n  name: \'Very simple story\',\n};\n',locationsMap:{"addons-source-loader--button":{startLoc:{col:22,line:21},endLoc:{col:34,line:21},startBody:{col:22,line:21},endBody:{col:34,line:21}},"addons-source-loader--simple-story":{startLoc:{col:27,line:30},endLoc:{col:9,line:35},startBody:{col:27,line:30},endBody:{col:9,line:35}}}}},_defineProperty(_parameters,"storySource",{source:"import button from './button.html';\n\nconst packageName = './button.html';\nconst componentSubtitle = `import button from '${packageName}/lib/elements/buttons';`;\n\nexport default {\n  title: 'Addons/Source loader',\n  parameters: {\n    componentSubtitle,\n  },\n};\n\nexport const Button = () => button;\nButton.story = {\n  parameters: {\n    storySource: {\n      source: button,\n    },\n  },\n};\n\nexport const SimpleStory = () =>\n  `<p>\n      <strong>\n        This is a fragment of HTML\n      </strong>\n    </p>`;\nSimpleStory.story = {\n  name: 'Very simple story',\n};\n",locationsMap:{"addons-source-loader--button":{startLoc:{col:22,line:13},endLoc:{col:34,line:13},startBody:{col:22,line:13},endBody:{col:34,line:13}},"addons-source-loader--simple-story":{startLoc:{col:27,line:22},endLoc:{col:9,line:27},startBody:{col:27,line:22},endBody:{col:9,line:27}}}}),_defineProperty(_parameters,"componentSubtitle",componentSubtitle),_parameters)};var Button=function Button(){return _button_html__WEBPACK_IMPORTED_MODULE_1___default.a};Button.story={parameters:{storySource:{source:_button_html__WEBPACK_IMPORTED_MODULE_1___default.a}}};var SimpleStory=function SimpleStory(){return"<p>\n      <strong>\n        This is a fragment of HTML\n      </strong>\n    </p>"};SimpleStory.story={name:"Very simple story"}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Login",(function(){return Login}));__webpack_require__(22);var _storybook_addon_links__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(104);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { withLinks } from \'@storybook/addon-links\';\\n\\nexport default {\\n\\ttitle: \'Gurukulam\',\\n\\tdecorators: [withLinks],\\n};\\n\\nexport const Login = () => `\\n<div class=\\"container vh-100 p-4\\">\\n\\t\\t\\t<div class=\\"row h-20 text-left  border-bottom\\">\\n\\t\\t\\t\\t<div class=\\"col-10 col-md-10 col-lg-10\\">\\n\\t\\n\\t\\t\\t\\t\\t<img class=\\"mt-4 pt-2\\" src=\\"https://techatpark.com/images/icons/logo_full.svg\\" alt=\\"\\" width=\\"72\\" height=\\"72\\">\\n\\t\\t\\t\\t\\t<h1 class=\\"h2 font-weight-lighter text-uppercase\\">Gurukulam</h1>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\t\\n\\t\\t\\t\\t<div class=\\"col-2 col-md-2 col-lg-2 align-self-end  text-right pr-3 pb-3 p-0\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<a href=\\"/sql_exams\\" class=\\"btn btn-outline-info btn-sm mr-2\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\"fab fa-youtube\\"></i>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\n\\t\\t\\t\\t\\t\\t<a href=\\"/sql_exams\\" class=\\"btn btn-outline-info btn-sm\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\"fab fa-linkedin-in\\"></i>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"row h-50\\">\\n\\t\\t\\t\\t<div class=\\"col-8 col-md-8 col-lg-8\\">\\n\\t\\t\\t\\t\\t\\t<p class=\\"text-left mt-5 pt-3 font-weight-bolder\\">எண்ணென்ப ஏனை எழுத்தென்ப இவ்விரண்டும் </br>\\n\\t\\t\\t\\t\\t\\t\\tகண்ணென்ப வாழும் உயிர்க்கு</p>\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-left mt-5 pt-3 text-uppercase\\">Made with Love<br>\\n\\t\\t\\t\\t\\t\\t\\tFor the students by the students of Tech@Park</p>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<a href=\\"/sql_exams\\" class=\\"btn btn-info btn-lg text-left mt-1\\">\\n\\t\\t\\t\\t\\t\\t\\tGet Started | <i class=\\"fab fa-github\\"></i>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\"col-4 col-md-4 col-lg-4 mt-4 p-0 border\\">\\n\\t\\t\\t\\t\\t<img src=\\"https://designsystem.techatpark.com/images/banner.png\\" class=\\"img-fluid\\" alt=\\"Responsive image\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t</div>\\n`;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"gurukulam--login":{"startLoc":{"col":21,"line":8},"endLoc":{"col":1,"line":49},"startBody":{"col":21,"line":8},"endBody":{"col":1,"line":49}}};\n    \nimport { withLinks } from \'@storybook/addon-links\';\n\nexport default {parameters: {"storySource":{"source":"import { withLinks } from \'@storybook/addon-links\';\\n\\nexport default {\\n\\ttitle: \'Gurukulam\',\\n\\tdecorators: [withLinks],\\n};\\n\\nexport const Login = () => `\\n<div class=\\"container vh-100 p-4\\">\\n\\t\\t\\t<div class=\\"row h-20 text-left  border-bottom\\">\\n\\t\\t\\t\\t<div class=\\"col-10 col-md-10 col-lg-10\\">\\n\\t\\n\\t\\t\\t\\t\\t<img class=\\"mt-4 pt-2\\" src=\\"https://techatpark.com/images/icons/logo_full.svg\\" alt=\\"\\" width=\\"72\\" height=\\"72\\">\\n\\t\\t\\t\\t\\t<h1 class=\\"h2 font-weight-lighter text-uppercase\\">Gurukulam</h1>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\t\\n\\t\\t\\t\\t<div class=\\"col-2 col-md-2 col-lg-2 align-self-end  text-right pr-3 pb-3 p-0\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<a href=\\"/sql_exams\\" class=\\"btn btn-outline-info btn-sm mr-2\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\"fab fa-youtube\\"></i>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\n\\t\\t\\t\\t\\t\\t<a href=\\"/sql_exams\\" class=\\"btn btn-outline-info btn-sm\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\"fab fa-linkedin-in\\"></i>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"row h-50\\">\\n\\t\\t\\t\\t<div class=\\"col-8 col-md-8 col-lg-8\\">\\n\\t\\t\\t\\t\\t\\t<p class=\\"text-left mt-5 pt-3 font-weight-bolder\\">எண்ணென்ப ஏனை எழுத்தென்ப இவ்விரண்டும் </br>\\n\\t\\t\\t\\t\\t\\t\\tகண்ணென்ப வாழும் உயிர்க்கு</p>\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\"text-left mt-5 pt-3 text-uppercase\\">Made with Love<br>\\n\\t\\t\\t\\t\\t\\t\\tFor the students by the students of Tech@Park</p>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<a href=\\"/sql_exams\\" class=\\"btn btn-info btn-lg text-left mt-1\\">\\n\\t\\t\\t\\t\\t\\t\\tGet Started | <i class=\\"fab fa-github\\"></i>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\"col-4 col-md-4 col-lg-4 mt-4 p-0 border\\">\\n\\t\\t\\t\\t\\t<img src=\\"https://designsystem.techatpark.com/images/banner.png\\" class=\\"img-fluid\\" alt=\\"Responsive image\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t</div>\\n`;\\n","locationsMap":{"gurukulam--login":{"startLoc":{"col":21,"line":8},"endLoc":{"col":1,"line":49},"startBody":{"col":21,"line":8},"endBody":{"col":1,"line":49}}}},},\n\ttitle: \'Gurukulam\',\n\tdecorators: [withLinks],\n};\n\nexport const Login = () => `\n<div class="container vh-100 p-4">\n\t\t\t<div class="row h-20 text-left  border-bottom">\n\t\t\t\t<div class="col-10 col-md-10 col-lg-10">\n\t\n\t\t\t\t\t<img class="mt-4 pt-2" src="https://techatpark.com/images/icons/logo_full.svg" alt="" width="72" height="72">\n\t\t\t\t\t<h1 class="h2 font-weight-lighter text-uppercase">Gurukulam</h1>\n\t\t\t\t\t\n\t\t\t\t</div>\t\n\t\t\t\t<div class="col-2 col-md-2 col-lg-2 align-self-end  text-right pr-3 pb-3 p-0">\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\t<a href="/sql_exams" class="btn btn-outline-info btn-sm mr-2">\n\t\t\t\t\t\t\t<i class="fab fa-youtube"></i>\n\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t<a href="/sql_exams" class="btn btn-outline-info btn-sm">\n\t\t\t\t\t\t\t<i class="fab fa-linkedin-in"></i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="row h-50">\n\t\t\t\t<div class="col-8 col-md-8 col-lg-8">\n\t\t\t\t\t\t<p class="text-left mt-5 pt-3 font-weight-bolder">எண்ணென்ப ஏனை எழுத்தென்ப இவ்விரண்டும் </br>\n\t\t\t\t\t\t\tகண்ணென்ப வாழும் உயிர்க்கு</p>\n\t\t\t\t\t\t\t<p class="text-left mt-5 pt-3 text-uppercase">Made with Love<br>\n\t\t\t\t\t\t\tFor the students by the students of Tech@Park</p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<a href="/sql_exams" class="btn btn-info btn-lg text-left mt-1">\n\t\t\t\t\t\t\tGet Started | <i class="fab fa-github"></i>\n\t\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div class="col-4 col-md-4 col-lg-4 mt-4 p-0 border">\n\t\t\t\t\t<img src="https://designsystem.techatpark.com/images/banner.png" class="img-fluid" alt="Responsive image">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t\n\t\t\t\n\t\t</div>\n`;\n',locationsMap:{"gurukulam--login":{startLoc:{col:21,line:16},endLoc:{col:1,line:57},startBody:{col:21,line:16},endBody:{col:1,line:57}}}}},"storySource",{source:'import { withLinks } from \'@storybook/addon-links\';\n\nexport default {\n\ttitle: \'Gurukulam\',\n\tdecorators: [withLinks],\n};\n\nexport const Login = () => `\n<div class="container vh-100 p-4">\n\t\t\t<div class="row h-20 text-left  border-bottom">\n\t\t\t\t<div class="col-10 col-md-10 col-lg-10">\n\t\n\t\t\t\t\t<img class="mt-4 pt-2" src="https://techatpark.com/images/icons/logo_full.svg" alt="" width="72" height="72">\n\t\t\t\t\t<h1 class="h2 font-weight-lighter text-uppercase">Gurukulam</h1>\n\t\t\t\t\t\n\t\t\t\t</div>\t\n\t\t\t\t<div class="col-2 col-md-2 col-lg-2 align-self-end  text-right pr-3 pb-3 p-0">\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\t<a href="/sql_exams" class="btn btn-outline-info btn-sm mr-2">\n\t\t\t\t\t\t\t<i class="fab fa-youtube"></i>\n\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t<a href="/sql_exams" class="btn btn-outline-info btn-sm">\n\t\t\t\t\t\t\t<i class="fab fa-linkedin-in"></i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="row h-50">\n\t\t\t\t<div class="col-8 col-md-8 col-lg-8">\n\t\t\t\t\t\t<p class="text-left mt-5 pt-3 font-weight-bolder">எண்ணென்ப ஏனை எழுத்தென்ப இவ்விரண்டும் </br>\n\t\t\t\t\t\t\tகண்ணென்ப வாழும் உயிர்க்கு</p>\n\t\t\t\t\t\t\t<p class="text-left mt-5 pt-3 text-uppercase">Made with Love<br>\n\t\t\t\t\t\t\tFor the students by the students of Tech@Park</p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<a href="/sql_exams" class="btn btn-info btn-lg text-left mt-1">\n\t\t\t\t\t\t\tGet Started | <i class="fab fa-github"></i>\n\t\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div class="col-4 col-md-4 col-lg-4 mt-4 p-0 border">\n\t\t\t\t\t<img src="https://designsystem.techatpark.com/images/banner.png" class="img-fluid" alt="Responsive image">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t\n\t\t\t\n\t\t</div>\n`;\n',locationsMap:{"gurukulam--login":{startLoc:{col:21,line:8},endLoc:{col:1,line:49},startBody:{col:21,line:8},endBody:{col:1,line:49}}}}),title:"Gurukulam",decorators:[_storybook_addon_links__WEBPACK_IMPORTED_MODULE_1__.withLinks]};var Login=function Login(){return'\n<div class="container vh-100 p-4">\n\t\t\t<div class="row h-20 text-left  border-bottom">\n\t\t\t\t<div class="col-10 col-md-10 col-lg-10">\n\t\n\t\t\t\t\t<img class="mt-4 pt-2" src="https://techatpark.com/images/icons/logo_full.svg" alt="" width="72" height="72">\n\t\t\t\t\t<h1 class="h2 font-weight-lighter text-uppercase">Gurukulam</h1>\n\t\t\t\t\t\n\t\t\t\t</div>\t\n\t\t\t\t<div class="col-2 col-md-2 col-lg-2 align-self-end  text-right pr-3 pb-3 p-0">\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\t<a href="/sql_exams" class="btn btn-outline-info btn-sm mr-2">\n\t\t\t\t\t\t\t<i class="fab fa-youtube"></i>\n\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t<a href="/sql_exams" class="btn btn-outline-info btn-sm">\n\t\t\t\t\t\t\t<i class="fab fa-linkedin-in"></i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="row h-50">\n\t\t\t\t<div class="col-8 col-md-8 col-lg-8">\n\t\t\t\t\t\t<p class="text-left mt-5 pt-3 font-weight-bolder">எண்ணென்ப ஏனை எழுத்தென்ப இவ்விரண்டும் </br>\n\t\t\t\t\t\t\tகண்ணென்ப வாழும் உயிர்க்கு</p>\n\t\t\t\t\t\t\t<p class="text-left mt-5 pt-3 text-uppercase">Made with Love<br>\n\t\t\t\t\t\t\tFor the students by the students of Tech@Park</p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<a href="/sql_exams" class="btn btn-info btn-lg text-left mt-1">\n\t\t\t\t\t\t\tGet Started | <i class="fab fa-github"></i>\n\t\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div class="col-4 col-md-4 col-lg-4 mt-4 p-0 border">\n\t\t\t\t\t<img src="https://designsystem.techatpark.com/images/banner.png" class="img-fluid" alt="Responsive image">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t\n\t\t\t\n\t\t</div>\n'}}],[[164,1,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,